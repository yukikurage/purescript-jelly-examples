{
  "version": 3,
  "sources": ["../output/Control.Semigroupoid/index.js", "../output/Control.Category/index.js", "../output/Data.Function/index.js", "../output/Data.Functor/index.js", "../output/Control.Apply/index.js", "../output/Control.Applicative/index.js", "../output/Control.Bind/index.js", "../output/Control.Monad/index.js", "../output/Control.Monad.Reader.Class/index.js", "../output/Data.Semigroup/index.js", "../output/Data.Bounded/foreign.js", "../output/Data.Maybe/index.js", "../output/Data.Either/index.js", "../output/Effect/foreign.js", "../output/Data.Monoid/index.js", "../output/Effect/index.js", "../output/Data.Identity/index.js", "../output/Effect.Ref/foreign.js", "../output/Effect.Ref/index.js", "../output/Control.Monad.Rec.Class/index.js", "../output/Control.Monad.Trans.Class/index.js", "../output/Unsafe.Coerce/foreign.js", "../output/Safe.Coerce/index.js", "../output/Data.Newtype/index.js", "../output/Effect.Class/index.js", "../output/Control.Monad.Reader.Trans/index.js", "../output/Data.Bifunctor/index.js", "../output/Data.Exists/index.js", "../output/Data.Foldable/foreign.js", "../output/Data.Foldable/index.js", "../output/Data.Traversable/foreign.js", "../output/Effect.Aff/foreign.js", "../output/Control.Monad.Free.Trans/index.js", "../output/Control.Safely/index.js", "../output/Jelly.Data.Jelly.Core/foreign.js", "../output/Jelly.Data.Jelly.Core/index.js", "../output/Jelly.Data.Jelly/index.js", "../output/Web.DOM.Document/foreign.js", "../output/Data.Nullable/foreign.js", "../output/Data.Nullable/index.js", "../output/Web.DOM.Element/foreign.js", "../output/Web.DOM.ParentNode/foreign.js", "../output/Web.DOM.Node/foreign.js", "../output/Web.DOM.Text/index.js", "../output/Web.HTML/foreign.js", "../output/Web.HTML.HTMLDocument/foreign.js", "../output/Web.HTML.HTMLDocument/index.js", "../output/Web.HTML.HTMLElement/index.js", "../output/Web.HTML.Window/foreign.js", "../output/Jelly.HTML/index.js", "../output/Jelly.RunComponent/index.js", "../output/Main/index.js", "../scripts/entry.js"],
  "sourcesContent": ["// Generated by purs version 0.15.2\nvar semigroupoidFn = {\n    compose: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(g(x));\n            };\n        };\n    }\n};\nvar compose = function (dict) {\n    return dict.compose;\n};\nvar composeFlipped = function (dictSemigroupoid) {\n    return function (f) {\n        return function (g) {\n            return compose(dictSemigroupoid)(g)(f);\n        };\n    };\n};\nexport {\n    compose,\n    composeFlipped,\n    semigroupoidFn\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nvar identity = function (dict) {\n    return dict.identity;\n};\nvar categoryFn = {\n    identity: function (x) {\n        return x;\n    },\n    Semigroupoid0: function () {\n        return Control_Semigroupoid.semigroupoidFn;\n    }\n};\nexport {\n    identity,\n    categoryFn\n};\nexport {\n    compose\n} from \"../Control.Semigroupoid/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nvar on = function (f) {\n    return function (g) {\n        return function (x) {\n            return function (y) {\n                return f(g(x))(g(y));\n            };\n        };\n    };\n};\nvar flip = function (f) {\n    return function (b) {\n        return function (a) {\n            return f(a)(b);\n        };\n    };\n};\nvar $$const = function (a) {\n    return function (v) {\n        return a;\n    };\n};\nvar applyN = function (f) {\n    var go = function ($copy_n) {\n        return function ($copy_acc) {\n            var $tco_var_n = $copy_n;\n            var $tco_done = false;\n            var $tco_result;\n            function $tco_loop(n, acc) {\n                if (n <= 0) {\n                    $tco_done = true;\n                    return acc;\n                };\n                if (Data_Boolean.otherwise) {\n                    $tco_var_n = n - 1 | 0;\n                    $copy_acc = f(acc);\n                    return;\n                };\n                throw new Error(\"Failed pattern match at Data.Function (line 107, column 3 - line 109, column 37): \" + [ n.constructor.name, acc.constructor.name ]);\n            };\n            while (!$tco_done) {\n                $tco_result = $tco_loop($tco_var_n, $copy_acc);\n            };\n            return $tco_result;\n        };\n    };\n    return go;\n};\nvar applyFlipped = function (x) {\n    return function (f) {\n        return f(x);\n    };\n};\nvar apply = function (f) {\n    return function (x) {\n        return f(x);\n    };\n};\nexport {\n    flip,\n    $$const as const,\n    apply,\n    applyFlipped,\n    applyN,\n    on\n};\nexport {\n    compose,\n    identity\n} from \"../Control.Category/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar map = function (dict) {\n    return dict.map;\n};\nvar mapFlipped = function (dictFunctor) {\n    return function (fa) {\n        return function (f) {\n            return map(dictFunctor)(f)(fa);\n        };\n    };\n};\nvar $$void = function (dictFunctor) {\n    return map(dictFunctor)(Data_Function[\"const\"](Data_Unit.unit));\n};\nvar voidLeft = function (dictFunctor) {\n    return function (f) {\n        return function (x) {\n            return map(dictFunctor)(Data_Function[\"const\"](x))(f);\n        };\n    };\n};\nvar voidRight = function (dictFunctor) {\n    return function (x) {\n        return map(dictFunctor)(Data_Function[\"const\"](x));\n    };\n};\nvar functorProxy = {\n    map: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar functorFn = {\n    map: /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn)\n};\nvar functorArray = {\n    map: $foreign.arrayMap\n};\nvar flap = function (dictFunctor) {\n    return function (ff) {\n        return function (x) {\n            return map(dictFunctor)(function (f) {\n                return f(x);\n            })(ff);\n        };\n    };\n};\nexport {\n    map,\n    mapFlipped,\n    $$void as void,\n    voidRight,\n    voidLeft,\n    flap,\n    functorFn,\n    functorArray,\n    functorProxy\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar applyProxy = {\n    apply: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorProxy;\n    }\n};\nvar applyFn = {\n    apply: function (f) {\n        return function (g) {\n            return function (x) {\n                return f(x)(g(x));\n            };\n        };\n    },\n    Functor0: function () {\n        return Data_Functor.functorFn;\n    }\n};\nvar applyArray = {\n    apply: $foreign.arrayApply,\n    Functor0: function () {\n        return Data_Functor.functorArray;\n    }\n};\nvar apply = function (dict) {\n    return dict.apply;\n};\nvar applyFirst = function (dictApply) {\n    return function (a) {\n        return function (b) {\n            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"])(a))(b);\n        };\n    };\n};\nvar applySecond = function (dictApply) {\n    return function (a) {\n        return function (b) {\n            return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function[\"const\"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);\n        };\n    };\n};\nvar lift2 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);\n            };\n        };\n    };\n};\nvar lift3 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c);\n                };\n            };\n        };\n    };\n};\nvar lift4 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d);\n                    };\n                };\n            };\n        };\n    };\n};\nvar lift5 = function (dictApply) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return function (d) {\n                        return function (e) {\n                            return apply(dictApply)(apply(dictApply)(apply(dictApply)(apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b))(c))(d))(e);\n                        };\n                    };\n                };\n            };\n        };\n    };\n};\nexport {\n    apply,\n    applyFirst,\n    applySecond,\n    lift2,\n    lift3,\n    lift4,\n    lift5,\n    applyFn,\n    applyArray,\n    applyProxy\n};\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar pure = function (dict) {\n    return dict.pure;\n};\nvar unless = function (dictApplicative) {\n    return function (v) {\n        return function (v1) {\n            if (!v) {\n                return v1;\n            };\n            if (v) {\n                return pure(dictApplicative)(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 68, column 1 - line 68, column 65): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar when = function (dictApplicative) {\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return pure(dictApplicative)(Data_Unit.unit);\n            };\n            throw new Error(\"Failed pattern match at Control.Applicative (line 63, column 1 - line 63, column 63): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nvar liftA1 = function (dictApplicative) {\n    return function (f) {\n        return function (a) {\n            return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);\n        };\n    };\n};\nvar applicativeProxy = {\n    pure: function (v) {\n        return Type_Proxy[\"Proxy\"].value;\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar applicativeFn = {\n    pure: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar applicativeArray = {\n    pure: function (x) {\n        return [ x ];\n    },\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nexport {\n    pure,\n    liftA1,\n    unless,\n    when,\n    applicativeFn,\n    applicativeArray,\n    applicativeProxy\n};\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar discard = function (dict) {\n    return dict.discard;\n};\nvar bindProxy = {\n    bind: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyProxy;\n    }\n};\nvar bindFn = {\n    bind: function (m) {\n        return function (f) {\n            return function (x) {\n                return f(m(x))(x);\n            };\n        };\n    },\n    Apply0: function () {\n        return Control_Apply.applyFn;\n    }\n};\nvar bindArray = {\n    bind: $foreign.arrayBind,\n    Apply0: function () {\n        return Control_Apply.applyArray;\n    }\n};\nvar bind = function (dict) {\n    return dict.bind;\n};\nvar bindFlipped = function (dictBind) {\n    return Data_Function.flip(bind(dictBind));\n};\nvar composeKleisliFlipped = function (dictBind) {\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bindFlipped(dictBind)(f)(g(a));\n            };\n        };\n    };\n};\nvar composeKleisli = function (dictBind) {\n    return function (f) {\n        return function (g) {\n            return function (a) {\n                return bind(dictBind)(f(a))(g);\n            };\n        };\n    };\n};\nvar discardProxy = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar discardUnit = {\n    discard: function (dictBind) {\n        return bind(dictBind);\n    }\n};\nvar ifM = function (dictBind) {\n    return function (cond) {\n        return function (t) {\n            return function (f) {\n                return bind(dictBind)(cond)(function (cond$prime) {\n                    if (cond$prime) {\n                        return t;\n                    };\n                    return f;\n                });\n            };\n        };\n    };\n};\nvar join = function (dictBind) {\n    return function (m) {\n        return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nexport {\n    bind,\n    bindFlipped,\n    discard,\n    join,\n    composeKleisli,\n    composeKleisliFlipped,\n    ifM,\n    bindFn,\n    bindArray,\n    bindProxy,\n    discardUnit,\n    discardProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar whenM = function (dictMonad) {\n    return function (mb) {\n        return function (m) {\n            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {\n                return Control_Applicative.when(dictMonad.Applicative0())(b)(m);\n            });\n        };\n    };\n};\nvar unlessM = function (dictMonad) {\n    return function (mb) {\n        return function (m) {\n            return Control_Bind.bind(dictMonad.Bind1())(mb)(function (b) {\n                return Control_Applicative.unless(dictMonad.Applicative0())(b)(m);\n            });\n        };\n    };\n};\nvar monadProxy = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeProxy;\n    },\n    Bind1: function () {\n        return Control_Bind.bindProxy;\n    }\n};\nvar monadFn = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeFn;\n    },\n    Bind1: function () {\n        return Control_Bind.bindFn;\n    }\n};\nvar monadArray = {\n    Applicative0: function () {\n        return Control_Applicative.applicativeArray;\n    },\n    Bind1: function () {\n        return Control_Bind.bindArray;\n    }\n};\nvar liftM1 = function (dictMonad) {\n    return function (f) {\n        return function (a) {\n            return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {\n                return Control_Applicative.pure(dictMonad.Applicative0())(f(a$prime));\n            });\n        };\n    };\n};\nvar ap = function (dictMonad) {\n    return function (f) {\n        return function (a) {\n            return Control_Bind.bind(dictMonad.Bind1())(f)(function (f$prime) {\n                return Control_Bind.bind(dictMonad.Bind1())(a)(function (a$prime) {\n                    return Control_Applicative.pure(dictMonad.Applicative0())(f$prime(a$prime));\n                });\n            });\n        };\n    };\n};\nexport {\n    liftM1,\n    whenM,\n    unlessM,\n    ap,\n    monadFn,\n    monadArray,\n    monadProxy\n};\nexport {\n    liftA1,\n    pure,\n    unless,\n    when\n} from \"../Control.Applicative/index.js\";\nexport {\n    apply\n} from \"../Control.Apply/index.js\";\nexport {\n    bind,\n    ifM,\n    join\n} from \"../Control.Bind/index.js\";\nexport {\n    map,\n    void\n} from \"../Data.Functor/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Semigroupoid from \"../Control.Semigroupoid/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nvar monadAskFun = {\n    ask: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Control_Monad.monadFn;\n    }\n};\nvar monadReaderFun = {\n    local: /* #__PURE__ */ Control_Semigroupoid.composeFlipped(Control_Semigroupoid.semigroupoidFn),\n    MonadAsk0: function () {\n        return monadAskFun;\n    }\n};\nvar local = function (dict) {\n    return dict.local;\n};\nvar ask = function (dict) {\n    return dict.ask;\n};\nvar asks = function (dictMonadAsk) {\n    return function (f) {\n        return Data_Functor.map((((dictMonadAsk.Monad0()).Bind1()).Apply0()).Functor0())(f)(ask(dictMonadAsk));\n    };\n};\nexport {\n    ask,\n    local,\n    asks,\n    monadAskFun,\n    monadReaderFun\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Data_Void from \"../Data.Void/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar semigroupVoid = {\n    append: function (v) {\n        return Data_Void.absurd;\n    }\n};\nvar semigroupUnit = {\n    append: function (v) {\n        return function (v1) {\n            return Data_Unit.unit;\n        };\n    }\n};\nvar semigroupString = {\n    append: $foreign.concatString\n};\nvar semigroupRecordNil = {\n    appendRecord: function (v) {\n        return function (v1) {\n            return function (v2) {\n                return {};\n            };\n        };\n    }\n};\nvar semigroupProxy = {\n    append: function (v) {\n        return function (v1) {\n            return Type_Proxy[\"Proxy\"].value;\n        };\n    }\n};\nvar semigroupArray = {\n    append: $foreign.concatArray\n};\nvar appendRecord = function (dict) {\n    return dict.appendRecord;\n};\nvar semigroupRecord = function () {\n    return function (dictSemigroupRecord) {\n        return {\n            append: appendRecord(dictSemigroupRecord)(Type_Proxy[\"Proxy\"].value)\n        };\n    };\n};\nvar append = function (dict) {\n    return dict.append;\n};\nvar semigroupFn = function (dictSemigroup) {\n    return {\n        append: function (f) {\n            return function (g) {\n                return function (x) {\n                    return append(dictSemigroup)(f(x))(g(x));\n                };\n            };\n        }\n    };\n};\nvar semigroupRecordCons = function (dictIsSymbol) {\n    return function () {\n        return function (dictSemigroupRecord) {\n            return function (dictSemigroup) {\n                return {\n                    appendRecord: function (v) {\n                        return function (ra) {\n                            return function (rb) {\n                                var tail = appendRecord(dictSemigroupRecord)(Type_Proxy[\"Proxy\"].value)(ra)(rb);\n                                var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy[\"Proxy\"].value);\n                                var insert = Record_Unsafe.unsafeSet(key);\n                                var get = Record_Unsafe.unsafeGet(key);\n                                return insert(append(dictSemigroup)(get(ra))(get(rb)))(tail);\n                            };\n                        };\n                    }\n                };\n            };\n        };\n    };\n};\nexport {\n    append,\n    appendRecord,\n    semigroupString,\n    semigroupUnit,\n    semigroupVoid,\n    semigroupFn,\n    semigroupArray,\n    semigroupProxy,\n    semigroupRecord,\n    semigroupRecordNil,\n    semigroupRecordCons\n};\n", "export const topInt = 2147483647;\nexport const bottomInt = -2147483648;\n\nexport const topChar = String.fromCharCode(65535);\nexport const bottomChar = String.fromCharCode(0);\n\nexport const topNumber = Number.POSITIVE_INFINITY;\nexport const bottomNumber = Number.NEGATIVE_INFINITY;\n", "// Generated by purs version 0.15.2\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Nothing = /* #__PURE__ */ (function () {\n    function Nothing() {\n\n    };\n    Nothing.value = new Nothing();\n    return Nothing;\n})();\nvar Just = /* #__PURE__ */ (function () {\n    function Just(value0) {\n        this.value0 = value0;\n    };\n    Just.create = function (value0) {\n        return new Just(value0);\n    };\n    return Just;\n})();\nvar showMaybe = function (dictShow) {\n    return {\n        show: function (v) {\n            if (v instanceof Just) {\n                return \"(Just \" + (Data_Show.show(dictShow)(v.value0) + \")\");\n            };\n            if (v instanceof Nothing) {\n                return \"Nothing\";\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 223, column 1 - line 225, column 28): \" + [ v.constructor.name ]);\n        }\n    };\n};\nvar semigroupMaybe = function (dictSemigroup) {\n    return {\n        append: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 182, column 1 - line 185, column 43): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        }\n    };\n};\nvar optional = function (dictAlt) {\n    return function (dictApplicative) {\n        return function (a) {\n            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Just.create)(a))(Control_Applicative.pure(dictApplicative)(Nothing.value));\n        };\n    };\n};\nvar monoidMaybe = function (dictSemigroup) {\n    return {\n        mempty: Nothing.value,\n        Semigroup0: function () {\n            return semigroupMaybe(dictSemigroup);\n        }\n    };\n};\nvar maybe$prime = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v(Data_Unit.unit);\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 250, column 1 - line 250, column 62): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar maybe = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Nothing) {\n                return v;\n            };\n            if (v2 instanceof Just) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 237, column 1 - line 237, column 51): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar isNothing = /* #__PURE__ */ maybe(true)(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isJust = /* #__PURE__ */ maybe(false)(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar genericMaybe = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return Nothing.value;\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Just(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Nothing) {\n            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);\n        };\n        if (x instanceof Just) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 227, column 1 - line 227, column 52): \" + [ x.constructor.name ]);\n    }\n};\nvar functorMaybe = {\n    map: function (v) {\n        return function (v1) {\n            if (v1 instanceof Just) {\n                return new Just(v(v1.value0));\n            };\n            return Nothing.value;\n        };\n    }\n};\nvar invariantMaybe = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorMaybe)\n};\nvar fromMaybe$prime = function (a) {\n    return maybe$prime(a)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar fromMaybe = function (a) {\n    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar fromJust = function () {\n    return function (v) {\n        if (v instanceof Just) {\n            return v.value0;\n        };\n        throw new Error(\"Failed pattern match at Data.Maybe (line 288, column 1 - line 288, column 46): \" + [ v.constructor.name ]);\n    };\n};\nvar extendMaybe = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Nothing) {\n                return Nothing.value;\n            };\n            return new Just(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar eqMaybe = function (dictEq) {\n    return {\n        eq: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return true;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return Data_Eq.eq(dictEq)(x.value0)(y.value0);\n                };\n                return false;\n            };\n        }\n    };\n};\nvar ordMaybe = function (dictOrd) {\n    return {\n        compare: function (x) {\n            return function (y) {\n                if (x instanceof Nothing && y instanceof Nothing) {\n                    return Data_Ordering.EQ.value;\n                };\n                if (x instanceof Nothing) {\n                    return Data_Ordering.LT.value;\n                };\n                if (y instanceof Nothing) {\n                    return Data_Ordering.GT.value;\n                };\n                if (x instanceof Just && y instanceof Just) {\n                    return Data_Ord.compare(dictOrd)(x.value0)(y.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n            };\n        },\n        Eq0: function () {\n            return eqMaybe(dictOrd.Eq0());\n        }\n    };\n};\nvar eq1Maybe = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqMaybe(dictEq));\n    }\n};\nvar ord1Maybe = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordMaybe(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Maybe;\n    }\n};\nvar boundedMaybe = function (dictBounded) {\n    return {\n        top: new Just(Data_Bounded.top(dictBounded)),\n        bottom: Nothing.value,\n        Ord0: function () {\n            return ordMaybe(dictBounded.Ord0());\n        }\n    };\n};\nvar applyMaybe = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return Data_Functor.map(functorMaybe)(v.value0)(v1);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 67, column 1 - line 69, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar bindMaybe = {\n    bind: function (v) {\n        return function (v1) {\n            if (v instanceof Just) {\n                return v1(v.value0);\n            };\n            if (v instanceof Nothing) {\n                return Nothing.value;\n            };\n            throw new Error(\"Failed pattern match at Data.Maybe (line 125, column 1 - line 127, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Apply0: function () {\n        return applyMaybe;\n    }\n};\nvar semiringMaybe = function (dictSemiring) {\n    return {\n        zero: Nothing.value,\n        one: new Just(Data_Semiring.one(dictSemiring)),\n        add: function (v) {\n            return function (v1) {\n                if (v instanceof Nothing) {\n                    return v1;\n                };\n                if (v1 instanceof Nothing) {\n                    return v;\n                };\n                if (v instanceof Just && v1 instanceof Just) {\n                    return new Just(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Maybe (line 190, column 1 - line 198, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        },\n        mul: function (x) {\n            return function (y) {\n                return Control_Apply.apply(applyMaybe)(Data_Functor.map(functorMaybe)(Data_Semiring.mul(dictSemiring))(x))(y);\n            };\n        }\n    };\n};\nvar applicativeMaybe = /* #__PURE__ */ (function () {\n    return {\n        pure: Just.create,\n        Apply0: function () {\n            return applyMaybe;\n        }\n    };\n})();\nvar monadMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Bind1: function () {\n        return bindMaybe;\n    }\n};\nvar altMaybe = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Nothing) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorMaybe;\n    }\n};\nvar plusMaybe = /* #__PURE__ */ (function () {\n    return {\n        empty: Nothing.value,\n        Alt0: function () {\n            return altMaybe;\n        }\n    };\n})();\nvar alternativeMaybe = {\n    Applicative0: function () {\n        return applicativeMaybe;\n    },\n    Plus1: function () {\n        return plusMaybe;\n    }\n};\nexport {\n    Nothing,\n    Just,\n    maybe,\n    maybe$prime,\n    fromMaybe,\n    fromMaybe$prime,\n    isJust,\n    isNothing,\n    fromJust,\n    optional,\n    functorMaybe,\n    applyMaybe,\n    applicativeMaybe,\n    altMaybe,\n    plusMaybe,\n    alternativeMaybe,\n    bindMaybe,\n    monadMaybe,\n    extendMaybe,\n    invariantMaybe,\n    semigroupMaybe,\n    monoidMaybe,\n    semiringMaybe,\n    eqMaybe,\n    eq1Maybe,\n    ordMaybe,\n    ord1Maybe,\n    boundedMaybe,\n    showMaybe,\n    genericMaybe\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Data_Bounded from \"../Data.Bounded/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Generic_Rep from \"../Data.Generic.Rep/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar Left = /* #__PURE__ */ (function () {\n    function Left(value0) {\n        this.value0 = value0;\n    };\n    Left.create = function (value0) {\n        return new Left(value0);\n    };\n    return Left;\n})();\nvar Right = /* #__PURE__ */ (function () {\n    function Right(value0) {\n        this.value0 = value0;\n    };\n    Right.create = function (value0) {\n        return new Right(value0);\n    };\n    return Right;\n})();\nvar showEither = function (dictShow) {\n    return function (dictShow1) {\n        return {\n            show: function (v) {\n                if (v instanceof Left) {\n                    return \"(Left \" + (Data_Show.show(dictShow)(v.value0) + \")\");\n                };\n                if (v instanceof Right) {\n                    return \"(Right \" + (Data_Show.show(dictShow1)(v.value0) + \")\");\n                };\n                throw new Error(\"Failed pattern match at Data.Either (line 173, column 1 - line 175, column 46): \" + [ v.constructor.name ]);\n            }\n        };\n    };\n};\nvar note$prime = function (f) {\n    return Data_Maybe[\"maybe$prime\"](function ($105) {\n        return Left.create(f($105));\n    })(Right.create);\n};\nvar note = function (a) {\n    return Data_Maybe.maybe(new Left(a))(Right.create);\n};\nvar genericEither = {\n    to: function (x) {\n        if (x instanceof Data_Generic_Rep.Inl) {\n            return new Left(x.value0);\n        };\n        if (x instanceof Data_Generic_Rep.Inr) {\n            return new Right(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    },\n    from: function (x) {\n        if (x instanceof Left) {\n            return new Data_Generic_Rep.Inl(x.value0);\n        };\n        if (x instanceof Right) {\n            return new Data_Generic_Rep.Inr(x.value0);\n        };\n        throw new Error(\"Failed pattern match at Data.Either (line 33, column 1 - line 33, column 56): \" + [ x.constructor.name ]);\n    }\n};\nvar functorEither = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Left) {\n                return new Left(m.value0);\n            };\n            if (m instanceof Right) {\n                return new Right(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar invariantEither = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorEither)\n};\nvar fromRight$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromRight = function (v) {\n    return function (v1) {\n        if (v1 instanceof Right) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar fromLeft$prime = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v(Data_Unit.unit);\n    };\n};\nvar fromLeft = function (v) {\n    return function (v1) {\n        if (v1 instanceof Left) {\n            return v1.value0;\n        };\n        return v;\n    };\n};\nvar extendEither = {\n    extend: function (v) {\n        return function (v1) {\n            if (v1 instanceof Left) {\n                return new Left(v1.value0);\n            };\n            return new Right(v(v1));\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar eqEither = function (dictEq) {\n    return function (dictEq1) {\n        return {\n            eq: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return Data_Eq.eq(dictEq)(x.value0)(y.value0);\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return Data_Eq.eq(dictEq1)(x.value0)(y.value0);\n                    };\n                    return false;\n                };\n            }\n        };\n    };\n};\nvar ordEither = function (dictOrd) {\n    return function (dictOrd1) {\n        return {\n            compare: function (x) {\n                return function (y) {\n                    if (x instanceof Left && y instanceof Left) {\n                        return Data_Ord.compare(dictOrd)(x.value0)(y.value0);\n                    };\n                    if (x instanceof Left) {\n                        return Data_Ordering.LT.value;\n                    };\n                    if (y instanceof Left) {\n                        return Data_Ordering.GT.value;\n                    };\n                    if (x instanceof Right && y instanceof Right) {\n                        return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Data.Either (line 0, column 0 - line 0, column 0): \" + [ x.constructor.name, y.constructor.name ]);\n                };\n            },\n            Eq0: function () {\n                return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());\n            }\n        };\n    };\n};\nvar eq1Either = function (dictEq) {\n    return {\n        eq1: function (dictEq1) {\n            return Data_Eq.eq(eqEither(dictEq)(dictEq1));\n        }\n    };\n};\nvar ord1Either = function (dictOrd) {\n    return {\n        compare1: function (dictOrd1) {\n            return Data_Ord.compare(ordEither(dictOrd)(dictOrd1));\n        },\n        Eq10: function () {\n            return eq1Either(dictOrd.Eq0());\n        }\n    };\n};\nvar either = function (v) {\n    return function (v1) {\n        return function (v2) {\n            if (v2 instanceof Left) {\n                return v(v2.value0);\n            };\n            if (v2 instanceof Right) {\n                return v1(v2.value0);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 208, column 1 - line 208, column 64): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n        };\n    };\n};\nvar hush = /* #__PURE__ */ (function () {\n    return either(Data_Function[\"const\"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);\n})();\nvar isLeft = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](true))(/* #__PURE__ */ Data_Function[\"const\"](false));\nvar isRight = /* #__PURE__ */ either(/* #__PURE__ */ Data_Function[\"const\"](false))(/* #__PURE__ */ Data_Function[\"const\"](true));\nvar choose = function (dictAlt) {\n    return function (a) {\n        return function (b) {\n            return Control_Alt.alt(dictAlt)(Data_Functor.map(dictAlt.Functor0())(Left.create)(a))(Data_Functor.map(dictAlt.Functor0())(Right.create)(b));\n        };\n    };\n};\nvar boundedEither = function (dictBounded) {\n    return function (dictBounded1) {\n        return {\n            top: new Right(Data_Bounded.top(dictBounded1)),\n            bottom: new Left(Data_Bounded.bottom(dictBounded)),\n            Ord0: function () {\n                return ordEither(dictBounded.Ord0())(dictBounded1.Ord0());\n            }\n        };\n    };\n};\nvar applyEither = {\n    apply: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return new Left(v.value0);\n            };\n            if (v instanceof Right) {\n                return Data_Functor.map(functorEither)(v.value0)(v1);\n            };\n            throw new Error(\"Failed pattern match at Data.Either (line 70, column 1 - line 72, column 30): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nvar bindEither = {\n    bind: /* #__PURE__ */ either(function (e) {\n        return function (v) {\n            return new Left(e);\n        };\n    })(function (a) {\n        return function (f) {\n            return f(a);\n        };\n    }),\n    Apply0: function () {\n        return applyEither;\n    }\n};\nvar semigroupEither = function (dictSemigroup) {\n    return {\n        append: function (x) {\n            return function (y) {\n                return Control_Apply.apply(applyEither)(Data_Functor.map(functorEither)(Data_Semigroup.append(dictSemigroup))(x))(y);\n            };\n        }\n    };\n};\nvar applicativeEither = /* #__PURE__ */ (function () {\n    return {\n        pure: Right.create,\n        Apply0: function () {\n            return applyEither;\n        }\n    };\n})();\nvar monadEither = {\n    Applicative0: function () {\n        return applicativeEither;\n    },\n    Bind1: function () {\n        return bindEither;\n    }\n};\nvar altEither = {\n    alt: function (v) {\n        return function (v1) {\n            if (v instanceof Left) {\n                return v1;\n            };\n            return v;\n        };\n    },\n    Functor0: function () {\n        return functorEither;\n    }\n};\nexport {\n    Left,\n    Right,\n    either,\n    choose,\n    isLeft,\n    isRight,\n    fromLeft,\n    fromLeft$prime,\n    fromRight,\n    fromRight$prime,\n    note,\n    note$prime,\n    hush,\n    functorEither,\n    genericEither,\n    invariantEither,\n    applyEither,\n    applicativeEither,\n    altEither,\n    bindEither,\n    monadEither,\n    extendEither,\n    showEither,\n    eqEither,\n    eq1Either,\n    ordEither,\n    ord1Either,\n    boundedEither,\n    semigroupEither\n};\n", "export const pureE = function (a) {\n  return function () {\n    return a;\n  };\n};\n\nexport const bindE = function (a) {\n  return function (f) {\n    return function () {\n      return f(a())();\n    };\n  };\n};\n\nexport const untilE = function (f) {\n  return function () {\n    while (!f());\n  };\n};\n\nexport const whileE = function (f) {\n  return function (a) {\n    return function () {\n      while (f()) {\n        a();\n      }\n    };\n  };\n};\n\nexport const forE = function (lo) {\n  return function (hi) {\n    return function (f) {\n      return function () {\n        for (var i = lo; i < hi; i++) {\n          f(i)();\n        }\n      };\n    };\n  };\n};\n\nexport const foreachE = function (as) {\n  return function (f) {\n    return function () {\n      for (var i = 0, l = as.length; i < l; i++) {\n        f(as[i])();\n      }\n    };\n  };\n};\n", "// Generated by purs version 0.15.2\nimport * as Data_Boolean from \"../Data.Boolean/index.js\";\nimport * as Data_EuclideanRing from \"../Data.EuclideanRing/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Symbol from \"../Data.Symbol/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Record_Unsafe from \"../Record.Unsafe/index.js\";\nimport * as Type_Proxy from \"../Type.Proxy/index.js\";\nvar monoidUnit = {\n    mempty: Data_Unit.unit,\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupUnit;\n    }\n};\nvar monoidString = {\n    mempty: \"\",\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupString;\n    }\n};\nvar monoidRecordNil = {\n    memptyRecord: function (v) {\n        return {};\n    },\n    SemigroupRecord0: function () {\n        return Data_Semigroup.semigroupRecordNil;\n    }\n};\nvar monoidOrdering = /* #__PURE__ */ (function () {\n    return {\n        mempty: Data_Ordering.EQ.value,\n        Semigroup0: function () {\n            return Data_Ordering.semigroupOrdering;\n        }\n    };\n})();\nvar monoidArray = {\n    mempty: [  ],\n    Semigroup0: function () {\n        return Data_Semigroup.semigroupArray;\n    }\n};\nvar memptyRecord = function (dict) {\n    return dict.memptyRecord;\n};\nvar monoidRecord = function () {\n    return function (dictMonoidRecord) {\n        return {\n            mempty: memptyRecord(dictMonoidRecord)(Type_Proxy[\"Proxy\"].value),\n            Semigroup0: function () {\n                return Data_Semigroup.semigroupRecord()(dictMonoidRecord.SemigroupRecord0());\n            }\n        };\n    };\n};\nvar mempty = function (dict) {\n    return dict.mempty;\n};\nvar monoidFn = function (dictMonoid) {\n    return {\n        mempty: function (v) {\n            return mempty(dictMonoid);\n        },\n        Semigroup0: function () {\n            return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());\n        }\n    };\n};\nvar monoidRecordCons = function (dictIsSymbol) {\n    return function (dictMonoid) {\n        return function () {\n            return function (dictMonoidRecord) {\n                return {\n                    memptyRecord: function (v) {\n                        var tail = memptyRecord(dictMonoidRecord)(Type_Proxy[\"Proxy\"].value);\n                        var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Type_Proxy[\"Proxy\"].value);\n                        var insert = Record_Unsafe.unsafeSet(key);\n                        return insert(mempty(dictMonoid))(tail);\n                    },\n                    SemigroupRecord0: function () {\n                        return Data_Semigroup.semigroupRecordCons(dictIsSymbol)()(dictMonoidRecord.SemigroupRecord0())(dictMonoid.Semigroup0());\n                    }\n                };\n            };\n        };\n    };\n};\nvar power = function (dictMonoid) {\n    return function (x) {\n        var go = function (p) {\n            if (p <= 0) {\n                return mempty(dictMonoid);\n            };\n            if (p === 1) {\n                return x;\n            };\n            if (Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(p)(2) === 0) {\n                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));\n                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x$prime);\n            };\n            if (Data_Boolean.otherwise) {\n                var x$prime = go(Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(p)(2));\n                return Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(Data_Semigroup.append(dictMonoid.Semigroup0())(x$prime)(x));\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 88, column 3 - line 88, column 17): \" + [ p.constructor.name ]);\n        };\n        return go;\n    };\n};\nvar guard = function (dictMonoid) {\n    return function (v) {\n        return function (v1) {\n            if (v) {\n                return v1;\n            };\n            if (!v) {\n                return mempty(dictMonoid);\n            };\n            throw new Error(\"Failed pattern match at Data.Monoid (line 96, column 1 - line 96, column 49): \" + [ v.constructor.name, v1.constructor.name ]);\n        };\n    };\n};\nexport {\n    mempty,\n    power,\n    guard,\n    memptyRecord,\n    monoidUnit,\n    monoidOrdering,\n    monoidFn,\n    monoidString,\n    monoidArray,\n    monoidRecord,\n    monoidRecordNil,\n    monoidRecordCons\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nvar $runtime_lazy = function (name, moduleName, init) {\n    var state = 0;\n    var val;\n    return function (lineNumber) {\n        if (state === 2) return val;\n        if (state === 1) throw new ReferenceError(name + \" was needed before it finished initializing (module \" + moduleName + \", line \" + lineNumber + \")\", moduleName, lineNumber);\n        state = 1;\n        val = init();\n        state = 2;\n        return val;\n    };\n};\nvar monadEffect = {\n    Applicative0: function () {\n        return applicativeEffect;\n    },\n    Bind1: function () {\n        return bindEffect;\n    }\n};\nvar bindEffect = {\n    bind: $foreign.bindE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar applicativeEffect = {\n    pure: $foreign.pureE,\n    Apply0: function () {\n        return $lazy_applyEffect(0);\n    }\n};\nvar $lazy_functorEffect = /* #__PURE__ */ $runtime_lazy(\"functorEffect\", \"Effect\", function () {\n    return {\n        map: Control_Applicative.liftA1(applicativeEffect)\n    };\n});\nvar $lazy_applyEffect = /* #__PURE__ */ $runtime_lazy(\"applyEffect\", \"Effect\", function () {\n    return {\n        apply: Control_Monad.ap(monadEffect),\n        Functor0: function () {\n            return $lazy_functorEffect(0);\n        }\n    };\n});\nvar functorEffect = /* #__PURE__ */ $lazy_functorEffect(20);\nvar applyEffect = /* #__PURE__ */ $lazy_applyEffect(23);\nvar semigroupEffect = function (dictSemigroup) {\n    return {\n        append: Control_Apply.lift2(applyEffect)(Data_Semigroup.append(dictSemigroup))\n    };\n};\nvar monoidEffect = function (dictMonoid) {\n    return {\n        mempty: $foreign.pureE(Data_Monoid.mempty(dictMonoid)),\n        Semigroup0: function () {\n            return semigroupEffect(dictMonoid.Semigroup0());\n        }\n    };\n};\nexport {\n    untilE,\n    whileE,\n    forE,\n    foreachE\n} from \"./foreign.js\";\nexport {\n    functorEffect,\n    applyEffect,\n    applicativeEffect,\n    bindEffect,\n    monadEffect,\n    semigroupEffect,\n    monoidEffect\n};\n", "// Generated by purs version 0.15.2\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Functor_Invariant from \"../Data.Functor.Invariant/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar Identity = function (x) {\n    return x;\n};\nvar showIdentity = function (dictShow) {\n    return {\n        show: function (v) {\n            return \"(Identity \" + (Data_Show.show(dictShow)(v) + \")\");\n        }\n    };\n};\nvar semiringIdentity = function (dictSemiring) {\n    return dictSemiring;\n};\nvar semigroupIdentity = function (dictSemigroup) {\n    return dictSemigroup;\n};\nvar ringIdentity = function (dictRing) {\n    return dictRing;\n};\nvar ordIdentity = function (dictOrd) {\n    return dictOrd;\n};\nvar newtypeIdentity = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monoidIdentity = function (dictMonoid) {\n    return dictMonoid;\n};\nvar lazyIdentity = function (dictLazy) {\n    return dictLazy;\n};\nvar heytingAlgebraIdentity = function (dictHeytingAlgebra) {\n    return dictHeytingAlgebra;\n};\nvar functorIdentity = {\n    map: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    }\n};\nvar invariantIdentity = {\n    imap: /* #__PURE__ */ Data_Functor_Invariant.imapF(functorIdentity)\n};\nvar extendIdentity = {\n    extend: function (f) {\n        return function (m) {\n            return f(m);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar euclideanRingIdentity = function (dictEuclideanRing) {\n    return dictEuclideanRing;\n};\nvar eqIdentity = function (dictEq) {\n    return dictEq;\n};\nvar eq1Identity = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqIdentity(dictEq));\n    }\n};\nvar ord1Identity = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordIdentity(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Identity;\n    }\n};\nvar comonadIdentity = {\n    extract: function (v) {\n        return v;\n    },\n    Extend0: function () {\n        return extendIdentity;\n    }\n};\nvar commutativeRingIdentity = function (dictCommutativeRing) {\n    return dictCommutativeRing;\n};\nvar boundedIdentity = function (dictBounded) {\n    return dictBounded;\n};\nvar booleanAlgebraIdentity = function (dictBooleanAlgebra) {\n    return dictBooleanAlgebra;\n};\nvar applyIdentity = {\n    apply: function (v) {\n        return function (v1) {\n            return v(v1);\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nvar bindIdentity = {\n    bind: function (v) {\n        return function (f) {\n            return f(v);\n        };\n    },\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar applicativeIdentity = {\n    pure: Identity,\n    Apply0: function () {\n        return applyIdentity;\n    }\n};\nvar monadIdentity = {\n    Applicative0: function () {\n        return applicativeIdentity;\n    },\n    Bind1: function () {\n        return bindIdentity;\n    }\n};\nvar altIdentity = {\n    alt: function (x) {\n        return function (v) {\n            return x;\n        };\n    },\n    Functor0: function () {\n        return functorIdentity;\n    }\n};\nexport {\n    Identity,\n    newtypeIdentity,\n    eqIdentity,\n    ordIdentity,\n    boundedIdentity,\n    heytingAlgebraIdentity,\n    booleanAlgebraIdentity,\n    semigroupIdentity,\n    monoidIdentity,\n    semiringIdentity,\n    euclideanRingIdentity,\n    ringIdentity,\n    commutativeRingIdentity,\n    lazyIdentity,\n    showIdentity,\n    eq1Identity,\n    ord1Identity,\n    functorIdentity,\n    invariantIdentity,\n    altIdentity,\n    applyIdentity,\n    applicativeIdentity,\n    bindIdentity,\n    monadIdentity,\n    extendIdentity,\n    comonadIdentity\n};\n", "export const _new = function (val) {\n  return function () {\n    return { value: val };\n  };\n};\n\nexport const newWithSelf = function (f) {\n  return function () {\n    var ref = { value: null };\n    ref.value = f(ref);\n    return ref;\n  };\n};\n\nexport const read = function (ref) {\n  return function () {\n    return ref.value;\n  };\n};\n\nexport const modifyImpl = function (f) {\n  return function (ref) {\n    return function () {\n      var t = f(ref.value);\n      ref.value = t.state;\n      return t.value;\n    };\n  };\n};\n\nexport const write = function (val) {\n  return function (ref) {\n    return function () {\n      ref.value = val;\n    };\n  };\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar $$new = $foreign[\"_new\"];\nvar modify$prime = $foreign.modifyImpl;\nvar modify = function (f) {\n    return modify$prime(function (s) {\n        var s$prime = f(s);\n        return {\n            state: s$prime,\n            value: s$prime\n        };\n    });\n};\nvar modify_ = function (f) {\n    return function (s) {\n        return Data_Functor[\"void\"](Effect.functorEffect)(modify(f)(s));\n    };\n};\nexport {\n    newWithSelf,\n    read,\n    write\n} from \"./foreign.js\";\nexport {\n    $$new as new,\n    modify$prime,\n    modify,\n    modify_\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nvar Loop = /* #__PURE__ */ (function () {\n    function Loop(value0) {\n        this.value0 = value0;\n    };\n    Loop.create = function (value0) {\n        return new Loop(value0);\n    };\n    return Loop;\n})();\nvar Done = /* #__PURE__ */ (function () {\n    function Done(value0) {\n        this.value0 = value0;\n    };\n    Done.create = function (value0) {\n        return new Done(value0);\n    };\n    return Done;\n})();\nvar tailRecM = function (dict) {\n    return dict.tailRecM;\n};\nvar tailRecM2 = function (dictMonadRec) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return tailRecM(dictMonadRec)(function (o) {\n                    return f(o.a)(o.b);\n                })({\n                    a: a,\n                    b: b\n                });\n            };\n        };\n    };\n};\nvar tailRecM3 = function (dictMonadRec) {\n    return function (f) {\n        return function (a) {\n            return function (b) {\n                return function (c) {\n                    return tailRecM(dictMonadRec)(function (o) {\n                        return f(o.a)(o.b)(o.c);\n                    })({\n                        a: a,\n                        b: b,\n                        c: c\n                    });\n                };\n            };\n        };\n    };\n};\nvar untilJust = function (dictMonadRec) {\n    return function (m) {\n        return tailRecM(dictMonadRec)(function (v) {\n            return Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(m)(function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return new Loop(Data_Unit.unit);\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return new Done(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 155, column 43 - line 157, column 19): \" + [ v1.constructor.name ]);\n            });\n        })(Data_Unit.unit);\n    };\n};\nvar whileJust = function (dictMonoid) {\n    return function (dictMonadRec) {\n        return function (m) {\n            return tailRecM(dictMonadRec)(function (v) {\n                return Data_Functor.mapFlipped((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(m)(function (v1) {\n                    if (v1 instanceof Data_Maybe.Nothing) {\n                        return new Done(v);\n                    };\n                    if (v1 instanceof Data_Maybe.Just) {\n                        return new Loop(Data_Semigroup.append(dictMonoid.Semigroup0())(v)(v1.value0));\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 148, column 45 - line 150, column 26): \" + [ v1.constructor.name ]);\n                });\n            })(Data_Monoid.mempty(dictMonoid));\n        };\n    };\n};\nvar tailRec = function (f) {\n    var go = function ($copy_v) {\n        var $tco_done = false;\n        var $tco_result;\n        function $tco_loop(v) {\n            if (v instanceof Loop) {\n                $copy_v = f(v.value0);\n                return;\n            };\n            if (v instanceof Done) {\n                $tco_done = true;\n                return v.value0;\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 93, column 3 - line 93, column 25): \" + [ v.constructor.name ]);\n        };\n        while (!$tco_done) {\n            $tco_result = $tco_loop($copy_v);\n        };\n        return $tco_result;\n    };\n    return function ($55) {\n        return go(f($55));\n    };\n};\nvar monadRecMaybe = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Done(Data_Maybe.Nothing.value);\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Maybe.Just && v.value0 instanceof Done) {\n                    return new Done(new Data_Maybe.Just(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 129, column 7 - line 129, column 31): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Maybe.monadMaybe;\n    }\n};\nvar monadRecIdentity = {\n    tailRecM: function (f) {\n        var runIdentity = function (v) {\n            return v;\n        };\n        var $56 = tailRec(function ($58) {\n            return runIdentity(f($58));\n        });\n        return function ($57) {\n            return Data_Identity.Identity($56($57));\n        };\n    },\n    Monad0: function () {\n        return Data_Identity.monadIdentity;\n    }\n};\nvar monadRecFunction = {\n    tailRecM: function (f) {\n        return function (a0) {\n            return function (e) {\n                return tailRec(function (a) {\n                    return f(a)(e);\n                })(a0);\n            };\n        };\n    },\n    Monad0: function () {\n        return Control_Monad.monadFn;\n    }\n};\nvar monadRecEither = {\n    tailRecM: function (f) {\n        return function (a0) {\n            var g = function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return new Done(new Data_Either.Left(v.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Loop) {\n                    return new Loop(f(v.value0.value0));\n                };\n                if (v instanceof Data_Either.Right && v.value0 instanceof Done) {\n                    return new Done(new Data_Either.Right(v.value0.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 121, column 7 - line 121, column 33): \" + [ v.constructor.name ]);\n            };\n            return tailRec(g)(f(a0));\n        };\n    },\n    Monad0: function () {\n        return Data_Either.monadEither;\n    }\n};\nvar monadRecEffect = {\n    tailRecM: function (f) {\n        return function (a) {\n            var fromDone = function (v) {\n                if (v instanceof Done) {\n                    return v.value0;\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 113, column 30 - line 113, column 44): \" + [ v.constructor.name ]);\n            };\n            return function __do() {\n                var r = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref[\"new\"])(f(a))();\n                (function () {\n                    while (!(function __do() {\n                        var v = Effect_Ref.read(r)();\n                        if (v instanceof Loop) {\n                            var e = f(v.value0)();\n                            Effect_Ref.write(e)(r)();\n                            return false;\n                        };\n                        if (v instanceof Done) {\n                            return true;\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 104, column 22 - line 109, column 28): \" + [ v.constructor.name ]);\n                    })()) {\n\n                    };\n                    return {};\n                })();\n                return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(r))();\n            };\n        };\n    },\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar functorStep = {\n    map: function (f) {\n        return function (m) {\n            if (m instanceof Loop) {\n                return new Loop(m.value0);\n            };\n            if (m instanceof Done) {\n                return new Done(f(m.value0));\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 0, column 0 - line 0, column 0): \" + [ m.constructor.name ]);\n        };\n    }\n};\nvar forever = function (dictMonadRec) {\n    return function (ma) {\n        return tailRecM(dictMonadRec)(function (u) {\n            return Data_Functor.voidRight((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(new Loop(u))(ma);\n        })(Data_Unit.unit);\n    };\n};\nvar bifunctorStep = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Loop) {\n                    return new Loop(v(v2.value0));\n                };\n                if (v2 instanceof Done) {\n                    return new Done(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Rec.Class (line 29, column 1 - line 31, column 34): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nexport {\n    Loop,\n    Done,\n    tailRec,\n    tailRecM,\n    tailRecM2,\n    tailRecM3,\n    forever,\n    whileJust,\n    untilJust,\n    functorStep,\n    bifunctorStep,\n    monadRecIdentity,\n    monadRecEffect,\n    monadRecFunction,\n    monadRecEither,\n    monadRecMaybe\n};\n", "// Generated by purs version 0.15.2\nvar lift = function (dict) {\n    return dict.lift;\n};\nexport {\n    lift\n};\n", "// module Unsafe.Coerce\n\nexport const unsafeCoerce = function (x) {\n  return x;\n};\n", "// Generated by purs version 0.15.2\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar coerce = function () {\n    return Unsafe_Coerce.unsafeCoerce;\n};\nexport {\n    coerce\n};\n", "// Generated by purs version 0.15.2\nimport * as Safe_Coerce from \"../Safe.Coerce/index.js\";\nvar wrap = Safe_Coerce.coerce;\nvar unwrap = Safe_Coerce.coerce;\nvar underF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return Safe_Coerce.coerce();\n                };\n            };\n        };\n    };\n};\nvar underF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return Safe_Coerce.coerce();\n                };\n            };\n        };\n    };\n};\nvar under2 = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar under = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar un = function () {\n    return function (v) {\n        return unwrap();\n    };\n};\nvar traverse = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar overF2 = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return Safe_Coerce.coerce();\n                };\n            };\n        };\n    };\n};\nvar overF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return Safe_Coerce.coerce();\n                };\n            };\n        };\n    };\n};\nvar over2 = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar over = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar newtypeMultiplicative = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeLast = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeFirst = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeEndo = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDual = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeDisj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeConj = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar newtypeAdditive = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar modify = function () {\n    return function (fn) {\n        return function (t) {\n            return wrap()(fn(unwrap()(t)));\n        };\n    };\n};\nvar collect = function () {\n    return function () {\n        return function (v) {\n            return Safe_Coerce.coerce();\n        };\n    };\n};\nvar alaF = function () {\n    return function () {\n        return function () {\n            return function () {\n                return function (v) {\n                    return Safe_Coerce.coerce();\n                };\n            };\n        };\n    };\n};\nvar ala = function () {\n    return function () {\n        return function () {\n            return function (v) {\n                return function (f) {\n                    return Safe_Coerce.coerce()(f(wrap()));\n                };\n            };\n        };\n    };\n};\nexport {\n    wrap,\n    unwrap,\n    un,\n    modify,\n    ala,\n    alaF,\n    over,\n    overF,\n    under,\n    underF,\n    over2,\n    overF2,\n    under2,\n    underF2,\n    traverse,\n    collect,\n    newtypeAdditive,\n    newtypeMultiplicative,\n    newtypeConj,\n    newtypeDisj,\n    newtypeDual,\n    newtypeEndo,\n    newtypeFirst,\n    newtypeLast\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar monadEffectEffect = {\n    liftEffect: /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn),\n    Monad0: function () {\n        return Effect.monadEffect;\n    }\n};\nvar liftEffect = function (dict) {\n    return dict.liftEffect;\n};\nexport {\n    liftEffect,\n    monadEffectEffect\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Cont_Class from \"../Control.Monad.Cont.Class/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Distributive from \"../Data.Distributive/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar ReaderT = function (x) {\n    return x;\n};\nvar withReaderT = function (f) {\n    return function (v) {\n        return function ($62) {\n            return v(f($62));\n        };\n    };\n};\nvar runReaderT = function (v) {\n    return v;\n};\nvar newtypeReaderT = {\n    Coercible0: function () {\n        return undefined;\n    }\n};\nvar monadTransReaderT = {\n    lift: function (dictMonad) {\n        return function ($63) {\n            return ReaderT(Data_Function[\"const\"]($63));\n        };\n    }\n};\nvar mapReaderT = function (f) {\n    return function (v) {\n        return function ($64) {\n            return f(v($64));\n        };\n    };\n};\nvar functorReaderT = function (dictFunctor) {\n    return {\n        map: (function () {\n            var $65 = Data_Functor.map(dictFunctor);\n            return function ($66) {\n                return mapReaderT($65($66));\n            };\n        })()\n    };\n};\nvar distributiveReaderT = function (dictDistributive) {\n    return {\n        distribute: function (dictFunctor) {\n            return function (a) {\n                return function (e) {\n                    return Data_Distributive.collect(dictDistributive)(dictFunctor)(function (r) {\n                        return r(e);\n                    })(a);\n                };\n            };\n        },\n        collect: function (dictFunctor) {\n            return function (f) {\n                var $67 = Data_Distributive.distribute(distributiveReaderT(dictDistributive))(dictFunctor);\n                var $68 = Data_Functor.map(dictFunctor)(f);\n                return function ($69) {\n                    return $67($68($69));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT(dictDistributive.Functor0());\n        }\n    };\n};\nvar applyReaderT = function (dictApply) {\n    return {\n        apply: function (v) {\n            return function (v1) {\n                return function (r) {\n                    return Control_Apply.apply(dictApply)(v(r))(v1(r));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT(dictApply.Functor0());\n        }\n    };\n};\nvar bindReaderT = function (dictBind) {\n    return {\n        bind: function (v) {\n            return function (k) {\n                return function (r) {\n                    return Control_Bind.bind(dictBind)(v(r))(function (a) {\n                        var v1 = k(a);\n                        return v1(r);\n                    });\n                };\n            };\n        },\n        Apply0: function () {\n            return applyReaderT(dictBind.Apply0());\n        }\n    };\n};\nvar semigroupReaderT = function (dictApply) {\n    return function (dictSemigroup) {\n        return {\n            append: Control_Apply.lift2(applyReaderT(dictApply))(Data_Semigroup.append(dictSemigroup))\n        };\n    };\n};\nvar applicativeReaderT = function (dictApplicative) {\n    return {\n        pure: (function () {\n            var $70 = Control_Applicative.pure(dictApplicative);\n            return function ($71) {\n                return ReaderT(Data_Function[\"const\"]($70($71)));\n            };\n        })(),\n        Apply0: function () {\n            return applyReaderT(dictApplicative.Apply0());\n        }\n    };\n};\nvar monadReaderT = function (dictMonad) {\n    return {\n        Applicative0: function () {\n            return applicativeReaderT(dictMonad.Applicative0());\n        },\n        Bind1: function () {\n            return bindReaderT(dictMonad.Bind1());\n        }\n    };\n};\nvar monadAskReaderT = function (dictMonad) {\n    return {\n        ask: Control_Applicative.pure(dictMonad.Applicative0()),\n        Monad0: function () {\n            return monadReaderT(dictMonad);\n        }\n    };\n};\nvar monadReaderReaderT = function (dictMonad) {\n    return {\n        local: withReaderT,\n        MonadAsk0: function () {\n            return monadAskReaderT(dictMonad);\n        }\n    };\n};\nvar monadContReaderT = function (dictMonadCont) {\n    return {\n        callCC: function (f) {\n            return function (r) {\n                return Control_Monad_Cont_Class.callCC(dictMonadCont)(function (c) {\n                    var v = f(function ($72) {\n                        return ReaderT(Data_Function[\"const\"](c($72)));\n                    });\n                    return v(r);\n                });\n            };\n        },\n        Monad0: function () {\n            return monadReaderT(dictMonadCont.Monad0());\n        }\n    };\n};\nvar monadEffectReader = function (dictMonadEffect) {\n    return {\n        liftEffect: (function () {\n            var $73 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadEffect.Monad0());\n            var $74 = Effect_Class.liftEffect(dictMonadEffect);\n            return function ($75) {\n                return $73($74($75));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT(dictMonadEffect.Monad0());\n        }\n    };\n};\nvar monadRecReaderT = function (dictMonadRec) {\n    return {\n        tailRecM: function (k) {\n            return function (a) {\n                var k$prime = function (r) {\n                    return function (a$prime) {\n                        var v = k(a$prime);\n                        return Control_Bind.bindFlipped((dictMonadRec.Monad0()).Bind1())(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0()))(v(r));\n                    };\n                };\n                return function (r) {\n                    return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(k$prime(r))(a);\n                };\n            };\n        },\n        Monad0: function () {\n            return monadReaderT(dictMonadRec.Monad0());\n        }\n    };\n};\nvar monadStateReaderT = function (dictMonadState) {\n    return {\n        state: (function () {\n            var $76 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadState.Monad0());\n            var $77 = Control_Monad_State_Class.state(dictMonadState);\n            return function ($78) {\n                return $76($77($78));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT(dictMonadState.Monad0());\n        }\n    };\n};\nvar monadTellReaderT = function (dictMonadTell) {\n    return {\n        tell: (function () {\n            var $79 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadTell.Monad1());\n            var $80 = Control_Monad_Writer_Class.tell(dictMonadTell);\n            return function ($81) {\n                return $79($80($81));\n            };\n        })(),\n        Semigroup0: dictMonadTell.Semigroup0,\n        Monad1: function () {\n            return monadReaderT(dictMonadTell.Monad1());\n        }\n    };\n};\nvar monadWriterReaderT = function (dictMonadWriter) {\n    return {\n        listen: mapReaderT(Control_Monad_Writer_Class.listen(dictMonadWriter)),\n        pass: mapReaderT(Control_Monad_Writer_Class.pass(dictMonadWriter)),\n        Monoid0: dictMonadWriter.Monoid0,\n        MonadTell1: function () {\n            return monadTellReaderT(dictMonadWriter.MonadTell1());\n        }\n    };\n};\nvar monadThrowReaderT = function (dictMonadThrow) {\n    return {\n        throwError: (function () {\n            var $82 = Control_Monad_Trans_Class.lift(monadTransReaderT)(dictMonadThrow.Monad0());\n            var $83 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n            return function ($84) {\n                return $82($83($84));\n            };\n        })(),\n        Monad0: function () {\n            return monadReaderT(dictMonadThrow.Monad0());\n        }\n    };\n};\nvar monadErrorReaderT = function (dictMonadError) {\n    return {\n        catchError: function (v) {\n            return function (h) {\n                return function (r) {\n                    return Control_Monad_Error_Class.catchError(dictMonadError)(v(r))(function (e) {\n                        var v1 = h(e);\n                        return v1(r);\n                    });\n                };\n            };\n        },\n        MonadThrow0: function () {\n            return monadThrowReaderT(dictMonadError.MonadThrow0());\n        }\n    };\n};\nvar monoidReaderT = function (dictApplicative) {\n    return function (dictMonoid) {\n        return {\n            mempty: Control_Applicative.pure(applicativeReaderT(dictApplicative))(Data_Monoid.mempty(dictMonoid)),\n            Semigroup0: function () {\n                return semigroupReaderT(dictApplicative.Apply0())(dictMonoid.Semigroup0());\n            }\n        };\n    };\n};\nvar altReaderT = function (dictAlt) {\n    return {\n        alt: function (v) {\n            return function (v1) {\n                return function (r) {\n                    return Control_Alt.alt(dictAlt)(v(r))(v1(r));\n                };\n            };\n        },\n        Functor0: function () {\n            return functorReaderT(dictAlt.Functor0());\n        }\n    };\n};\nvar plusReaderT = function (dictPlus) {\n    return {\n        empty: Data_Function[\"const\"](Control_Plus.empty(dictPlus)),\n        Alt0: function () {\n            return altReaderT(dictPlus.Alt0());\n        }\n    };\n};\nvar alternativeReaderT = function (dictAlternative) {\n    return {\n        Applicative0: function () {\n            return applicativeReaderT(dictAlternative.Applicative0());\n        },\n        Plus1: function () {\n            return plusReaderT(dictAlternative.Plus1());\n        }\n    };\n};\nvar monadPlusReaderT = function (dictMonadPlus) {\n    return {\n        Monad0: function () {\n            return monadReaderT(dictMonadPlus.Monad0());\n        },\n        Alternative1: function () {\n            return alternativeReaderT(dictMonadPlus.Alternative1());\n        }\n    };\n};\nexport {\n    ReaderT,\n    runReaderT,\n    withReaderT,\n    mapReaderT,\n    newtypeReaderT,\n    functorReaderT,\n    applyReaderT,\n    applicativeReaderT,\n    altReaderT,\n    plusReaderT,\n    alternativeReaderT,\n    bindReaderT,\n    monadReaderT,\n    semigroupReaderT,\n    monoidReaderT,\n    monadPlusReaderT,\n    monadTransReaderT,\n    monadEffectReader,\n    monadContReaderT,\n    monadThrowReaderT,\n    monadErrorReaderT,\n    monadAskReaderT,\n    monadReaderReaderT,\n    monadStateReaderT,\n    monadTellReaderT,\n    monadWriterReaderT,\n    distributiveReaderT,\n    monadRecReaderT\n};\nexport {\n    ask,\n    asks,\n    local\n} from \"../Control.Monad.Reader.Class/index.js\";\nexport {\n    lift\n} from \"../Control.Monad.Trans.Class/index.js\";\n", "// Generated by purs version 0.15.2\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nvar bimap = function (dict) {\n    return dict.bimap;\n};\nvar lmap = function (dictBifunctor) {\n    return function (f) {\n        return bimap(dictBifunctor)(f)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nvar rmap = function (dictBifunctor) {\n    return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));\n};\nvar bifunctorTuple = {\n    bimap: function (f) {\n        return function (g) {\n            return function (v) {\n                return new Data_Tuple.Tuple(f(v.value0), g(v.value1));\n            };\n        };\n    }\n};\nvar bifunctorEither = {\n    bimap: function (v) {\n        return function (v1) {\n            return function (v2) {\n                if (v2 instanceof Data_Either.Left) {\n                    return new Data_Either.Left(v(v2.value0));\n                };\n                if (v2 instanceof Data_Either.Right) {\n                    return new Data_Either.Right(v1(v2.value0));\n                };\n                throw new Error(\"Failed pattern match at Data.Bifunctor (line 32, column 1 - line 34, column 36): \" + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);\n            };\n        };\n    }\n};\nvar bifunctorConst = {\n    bimap: function (f) {\n        return function (v) {\n            return function (v1) {\n                return f(v1);\n            };\n        };\n    }\n};\nexport {\n    bimap,\n    lmap,\n    rmap,\n    bifunctorEither,\n    bifunctorTuple,\n    bifunctorConst\n};\n", "// Generated by purs version 0.15.2\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar runExists = Unsafe_Coerce.unsafeCoerce;\nvar mkExists = Unsafe_Coerce.unsafeCoerce;\nexport {\n    mkExists,\n    runExists\n};\n", "export const foldrArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = len - 1; i >= 0; i--) {\n        acc = f(xs[i])(acc);\n      }\n      return acc;\n    };\n  };\n};\n\nexport const foldlArray = function (f) {\n  return function (init) {\n    return function (xs) {\n      var acc = init;\n      var len = xs.length;\n      for (var i = 0; i < len; i++) {\n        acc = f(acc)(xs[i]);\n      }\n      return acc;\n    };\n  };\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Alt from \"../Control.Alt/index.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Plus from \"../Control.Plus/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor_Coproduct from \"../Data.Functor.Coproduct/index.js\";\nimport * as Data_HeytingAlgebra from \"../Data.HeytingAlgebra/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Maybe_First from \"../Data.Maybe.First/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Monoid_Conj from \"../Data.Monoid.Conj/index.js\";\nimport * as Data_Monoid_Disj from \"../Data.Monoid.Disj/index.js\";\nimport * as Data_Monoid_Dual from \"../Data.Monoid.Dual/index.js\";\nimport * as Data_Monoid_Endo from \"../Data.Monoid.Endo/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Ordering from \"../Data.Ordering/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Semiring from \"../Data.Semiring/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar foldr = function (dict) {\n    return dict.foldr;\n};\nvar indexr = function (dictFoldable) {\n    return function (idx) {\n        var go = function (a) {\n            return function (cursor) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $153 = cursor.pos === idx;\n                if ($153) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $312 = foldr(dictFoldable)(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($313) {\n            return (function (v) {\n                return v.elem;\n            })($312($313));\n        };\n    };\n};\nvar $$null = function (dictFoldable) {\n    return foldr(dictFoldable)(function (v) {\n        return function (v1) {\n            return false;\n        };\n    })(true);\n};\nvar oneOf = function (dictFoldable) {\n    return function (dictPlus) {\n        return foldr(dictFoldable)(Control_Alt.alt(dictPlus.Alt0()))(Control_Plus.empty(dictPlus));\n    };\n};\nvar oneOfMap = function (dictFoldable) {\n    return function (dictPlus) {\n        return function (f) {\n            return foldr(dictFoldable)((function () {\n                var $314 = Control_Alt.alt(dictPlus.Alt0());\n                return function ($315) {\n                    return $314(f($315));\n                };\n            })())(Control_Plus.empty(dictPlus));\n        };\n    };\n};\nvar traverse_ = function (dictApplicative) {\n    return function (dictFoldable) {\n        return function (f) {\n            return foldr(dictFoldable)((function () {\n                var $316 = Control_Apply.applySecond(dictApplicative.Apply0());\n                return function ($317) {\n                    return $316(f($317));\n                };\n            })())(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));\n        };\n    };\n};\nvar for_ = function (dictApplicative) {\n    return function (dictFoldable) {\n        return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));\n    };\n};\nvar sequence_ = function (dictApplicative) {\n    return function (dictFoldable) {\n        return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nvar foldl = function (dict) {\n    return dict.foldl;\n};\nvar indexl = function (dictFoldable) {\n    return function (idx) {\n        var go = function (cursor) {\n            return function (a) {\n                if (cursor.elem instanceof Data_Maybe.Just) {\n                    return cursor;\n                };\n                var $157 = cursor.pos === idx;\n                if ($157) {\n                    return {\n                        elem: new Data_Maybe.Just(a),\n                        pos: cursor.pos\n                    };\n                };\n                return {\n                    pos: cursor.pos + 1 | 0,\n                    elem: cursor.elem\n                };\n            };\n        };\n        var $318 = foldl(dictFoldable)(go)({\n            elem: Data_Maybe.Nothing.value,\n            pos: 0\n        });\n        return function ($319) {\n            return (function (v) {\n                return v.elem;\n            })($318($319));\n        };\n    };\n};\nvar intercalate = function (dictFoldable) {\n    return function (dictMonoid) {\n        return function (sep) {\n            return function (xs) {\n                var go = function (v) {\n                    return function (x) {\n                        if (v.init) {\n                            return {\n                                init: false,\n                                acc: x\n                            };\n                        };\n                        return {\n                            init: false,\n                            acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))\n                        };\n                    };\n                };\n                return (foldl(dictFoldable)(go)({\n                    init: true,\n                    acc: Data_Monoid.mempty(dictMonoid)\n                })(xs)).acc;\n            };\n        };\n    };\n};\nvar length = function (dictFoldable) {\n    return function (dictSemiring) {\n        return foldl(dictFoldable)(function (c) {\n            return function (v) {\n                return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);\n            };\n        })(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar maximumBy = function (dictFoldable) {\n    return function (cmp) {\n        var max$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $164 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.GT.value);\n                        if ($164) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 441, column 3 - line 441, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl(dictFoldable)(max$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar maximum = function (dictOrd) {\n    return function (dictFoldable) {\n        return maximumBy(dictFoldable)(Data_Ord.compare(dictOrd));\n    };\n};\nvar minimumBy = function (dictFoldable) {\n    return function (cmp) {\n        var min$prime = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return new Data_Maybe.Just(v1);\n                };\n                if (v instanceof Data_Maybe.Just) {\n                    return new Data_Maybe.Just((function () {\n                        var $168 = Data_Eq.eq(Data_Ordering.eqOrdering)(cmp(v.value0)(v1))(Data_Ordering.LT.value);\n                        if ($168) {\n                            return v.value0;\n                        };\n                        return v1;\n                    })());\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 454, column 3 - line 454, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n        return foldl(dictFoldable)(min$prime)(Data_Maybe.Nothing.value);\n    };\n};\nvar minimum = function (dictOrd) {\n    return function (dictFoldable) {\n        return minimumBy(dictFoldable)(Data_Ord.compare(dictOrd));\n    };\n};\nvar product = function (dictFoldable) {\n    return function (dictSemiring) {\n        return foldl(dictFoldable)(Data_Semiring.mul(dictSemiring))(Data_Semiring.one(dictSemiring));\n    };\n};\nvar sum = function (dictFoldable) {\n    return function (dictSemiring) {\n        return foldl(dictFoldable)(Data_Semiring.add(dictSemiring))(Data_Semiring.zero(dictSemiring));\n    };\n};\nvar foldableTuple = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v.value1)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v.value1);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v.value1);\n            };\n        };\n    }\n};\nvar foldableMultiplicative = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableMaybe = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return z;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(v1.value0)(z);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return z;\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(z)(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Maybe.Nothing) {\n                    return Data_Monoid.mempty(dictMonoid);\n                };\n                if (v1 instanceof Data_Maybe.Just) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 138, column 1 - line 144, column 27): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableIdentity = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableEither = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return z;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(v1.value0)(z);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return z;\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(z)(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (v) {\n            return function (v1) {\n                if (v1 instanceof Data_Either.Left) {\n                    return Data_Monoid.mempty(dictMonoid);\n                };\n                if (v1 instanceof Data_Either.Right) {\n                    return v(v1.value0);\n                };\n                throw new Error(\"Failed pattern match at Data.Foldable (line 181, column 1 - line 187, column 28): \" + [ v.constructor.name, v1.constructor.name ]);\n            };\n        };\n    }\n};\nvar foldableDual = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableDisj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableConst = {\n    foldr: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldl: function (v) {\n        return function (z) {\n            return function (v1) {\n                return z;\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (v) {\n            return function (v1) {\n                return Data_Monoid.mempty(dictMonoid);\n            };\n        };\n    }\n};\nvar foldableConj = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldableAdditive = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(v)(z);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return f(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return f(v);\n            };\n        };\n    }\n};\nvar foldMapDefaultR = function (dictFoldable) {\n    return function (dictMonoid) {\n        return function (f) {\n            return foldr(dictFoldable)(function (x) {\n                return function (acc) {\n                    return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);\n                };\n            })(Data_Monoid.mempty(dictMonoid));\n        };\n    };\n};\nvar foldableArray = {\n    foldr: $foreign.foldrArray,\n    foldl: $foreign.foldlArray,\n    foldMap: function (dictMonoid) {\n        return foldMapDefaultR(foldableArray)(dictMonoid);\n    }\n};\nvar foldMapDefaultL = function (dictFoldable) {\n    return function (dictMonoid) {\n        return function (f) {\n            return foldl(dictFoldable)(function (acc) {\n                return function (x) {\n                    return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));\n                };\n            })(Data_Monoid.mempty(dictMonoid));\n        };\n    };\n};\nvar foldMap = function (dict) {\n    return dict.foldMap;\n};\nvar foldableApp = function (dictFoldable) {\n    return {\n        foldr: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldr(dictFoldable)(f)(i)(v);\n                };\n            };\n        },\n        foldl: function (f) {\n            return function (i) {\n                return function (v) {\n                    return foldl(dictFoldable)(f)(i)(v);\n                };\n            };\n        },\n        foldMap: function (dictMonoid) {\n            return function (f) {\n                return function (v) {\n                    return foldMap(dictFoldable)(dictMonoid)(f)(v);\n                };\n            };\n        }\n    };\n};\nvar foldableCompose = function (dictFoldable) {\n    return function (dictFoldable1) {\n        return {\n            foldr: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldr(dictFoldable)(Data_Function.flip(foldr(dictFoldable1)(f)))(i)(v);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (i) {\n                    return function (v) {\n                        return foldl(dictFoldable)(foldl(dictFoldable1)(f))(i)(v);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                return function (f) {\n                    return function (v) {\n                        return foldMap(dictFoldable)(dictMonoid)(foldMap(dictFoldable1)(dictMonoid)(f))(v);\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldableCoproduct = function (dictFoldable) {\n    return function (dictFoldable1) {\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldr(dictFoldable)(f)(z))(foldr(dictFoldable1)(f)(z));\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return Data_Functor_Coproduct.coproduct(foldl(dictFoldable)(f)(z))(foldl(dictFoldable1)(f)(z));\n                };\n            },\n            foldMap: function (dictMonoid) {\n                return function (f) {\n                    return Data_Functor_Coproduct.coproduct(foldMap(dictFoldable)(dictMonoid)(f))(foldMap(dictFoldable1)(dictMonoid)(f));\n                };\n            }\n        };\n    };\n};\nvar foldableFirst = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr(foldableMaybe)(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl(foldableMaybe)(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return foldMap(foldableMaybe)(dictMonoid)(f)(v);\n            };\n        };\n    }\n};\nvar foldableLast = {\n    foldr: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldr(foldableMaybe)(f)(z)(v);\n            };\n        };\n    },\n    foldl: function (f) {\n        return function (z) {\n            return function (v) {\n                return foldl(foldableMaybe)(f)(z)(v);\n            };\n        };\n    },\n    foldMap: function (dictMonoid) {\n        return function (f) {\n            return function (v) {\n                return foldMap(foldableMaybe)(dictMonoid)(f)(v);\n            };\n        };\n    }\n};\nvar foldableProduct = function (dictFoldable) {\n    return function (dictFoldable1) {\n        return {\n            foldr: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldr(dictFoldable)(f)(foldr(dictFoldable1)(f)(z)(v.value1))(v.value0);\n                    };\n                };\n            },\n            foldl: function (f) {\n                return function (z) {\n                    return function (v) {\n                        return foldl(dictFoldable1)(f)(foldl(dictFoldable)(f)(z)(v.value0))(v.value1);\n                    };\n                };\n            },\n            foldMap: function (dictMonoid) {\n                return function (f) {\n                    return function (v) {\n                        return Data_Semigroup.append(dictMonoid.Semigroup0())(foldMap(dictFoldable)(dictMonoid)(f)(v.value0))(foldMap(dictFoldable1)(dictMonoid)(f)(v.value1));\n                    };\n                };\n            }\n        };\n    };\n};\nvar foldlDefault = function (dictFoldable) {\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return Data_Newtype.unwrap()(Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Dual.monoidDual(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn)))((function () {\n                    var $320 = Data_Function.flip(c);\n                    return function ($321) {\n                        return Data_Monoid_Dual.Dual(Data_Monoid_Endo.Endo($320($321)));\n                    };\n                })())(xs)))(u);\n            };\n        };\n    };\n};\nvar foldrDefault = function (dictFoldable) {\n    return function (c) {\n        return function (u) {\n            return function (xs) {\n                return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(function ($322) {\n                    return Data_Monoid_Endo.Endo(c($322));\n                })(xs))(u);\n            };\n        };\n    };\n};\nvar lookup = function (dictFoldable) {\n    return function (dictEq) {\n        return function (a) {\n            var $323 = Data_Newtype.unwrap();\n            var $324 = foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {\n                var $305 = Data_Eq.eq(dictEq)(a)(v.value0);\n                if ($305) {\n                    return new Data_Maybe.Just(v.value1);\n                };\n                return Data_Maybe.Nothing.value;\n            });\n            return function ($325) {\n                return $323($324($325));\n            };\n        };\n    };\n};\nvar surroundMap = function (dictFoldable) {\n    return function (dictSemigroup) {\n        return function (d) {\n            return function (t) {\n                return function (f) {\n                    var joined = function (a) {\n                        return function (m) {\n                            return Data_Semigroup.append(dictSemigroup)(d)(Data_Semigroup.append(dictSemigroup)(t(a))(m));\n                        };\n                    };\n                    return Data_Newtype.unwrap()(foldMap(dictFoldable)(Data_Monoid_Endo.monoidEndo(Control_Category.categoryFn))(joined)(f))(d);\n                };\n            };\n        };\n    };\n};\nvar surround = function (dictFoldable) {\n    return function (dictSemigroup) {\n        return function (d) {\n            return surroundMap(dictFoldable)(dictSemigroup)(d)(Control_Category.identity(Control_Category.categoryFn));\n        };\n    };\n};\nvar foldM = function (dictFoldable) {\n    return function (dictMonad) {\n        return function (f) {\n            return function (b0) {\n                return foldl(dictFoldable)(function (b) {\n                    return function (a) {\n                        return Control_Bind.bind(dictMonad.Bind1())(b)(Data_Function.flip(f)(a));\n                    };\n                })(Control_Applicative.pure(dictMonad.Applicative0())(b0));\n            };\n        };\n    };\n};\nvar fold = function (dictFoldable) {\n    return function (dictMonoid) {\n        return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nvar findMap = function (dictFoldable) {\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing) {\n                    return p(v1);\n                };\n                return v;\n            };\n        };\n        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar find = function (dictFoldable) {\n    return function (p) {\n        var go = function (v) {\n            return function (v1) {\n                if (v instanceof Data_Maybe.Nothing && p(v1)) {\n                    return new Data_Maybe.Just(v1);\n                };\n                return v;\n            };\n        };\n        return foldl(dictFoldable)(go)(Data_Maybe.Nothing.value);\n    };\n};\nvar any = function (dictFoldable) {\n    return function (dictHeytingAlgebra) {\n        return Data_Newtype.alaF()()()()(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));\n    };\n};\nvar elem = function (dictFoldable) {\n    return function (dictEq) {\n        var $326 = any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean);\n        var $327 = Data_Eq.eq(dictEq);\n        return function ($328) {\n            return $326($327($328));\n        };\n    };\n};\nvar notElem = function (dictFoldable) {\n    return function (dictEq) {\n        return function (x) {\n            var $329 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean);\n            var $330 = elem(dictFoldable)(dictEq)(x);\n            return function ($331) {\n                return $329($330($331));\n            };\n        };\n    };\n};\nvar or = function (dictFoldable) {\n    return function (dictHeytingAlgebra) {\n        return any(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nvar all = function (dictFoldable) {\n    return function (dictHeytingAlgebra) {\n        return Data_Newtype.alaF()()()()(Data_Monoid_Conj.Conj)(foldMap(dictFoldable)(Data_Monoid_Conj.monoidConj(dictHeytingAlgebra)));\n    };\n};\nvar and = function (dictFoldable) {\n    return function (dictHeytingAlgebra) {\n        return all(dictFoldable)(dictHeytingAlgebra)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nexport {\n    foldr,\n    foldl,\n    foldMap,\n    foldrDefault,\n    foldlDefault,\n    foldMapDefaultL,\n    foldMapDefaultR,\n    fold,\n    foldM,\n    traverse_,\n    for_,\n    sequence_,\n    oneOf,\n    oneOfMap,\n    intercalate,\n    surroundMap,\n    surround,\n    and,\n    or,\n    all,\n    any,\n    sum,\n    product,\n    elem,\n    notElem,\n    indexl,\n    indexr,\n    find,\n    findMap,\n    maximum,\n    maximumBy,\n    minimum,\n    minimumBy,\n    $$null as null,\n    length,\n    lookup,\n    foldableArray,\n    foldableMaybe,\n    foldableFirst,\n    foldableLast,\n    foldableAdditive,\n    foldableDual,\n    foldableDisj,\n    foldableConj,\n    foldableMultiplicative,\n    foldableEither,\n    foldableTuple,\n    foldableIdentity,\n    foldableConst,\n    foldableProduct,\n    foldableCoproduct,\n    foldableCompose,\n    foldableApp\n};\n", "// jshint maxparams: 3\n\nexport const traverseArrayImpl = (function () {\n  function array1(a) {\n    return [a];\n  }\n\n  function array2(a) {\n    return function (b) {\n      return [a, b];\n    };\n  }\n\n  function array3(a) {\n    return function (b) {\n      return function (c) {\n        return [a, b, c];\n      };\n    };\n  }\n\n  function concat2(xs) {\n    return function (ys) {\n      return xs.concat(ys);\n    };\n  }\n\n  return function (apply) {\n    return function (map) {\n      return function (pure) {\n        return function (f) {\n          return function (array) {\n            function go(bot, top) {\n              switch (top - bot) {\n              case 0: return pure([]);\n              case 1: return map(array1)(f(array[bot]));\n              case 2: return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));\n              case 3: return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));\n              default:\n                // This slightly tricky pivot selection aims to produce two\n                // even-length partitions where possible.\n                var pivot = bot + Math.floor((top - bot) / 4) * 2;\n                return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));\n              }\n            }\n            return go(0, array.length);\n          };\n        };\n      };\n    };\n  };\n})();\n", "/* globals setImmediate, clearImmediate, setTimeout, clearTimeout */\n/* eslint-disable no-unused-vars, no-prototype-builtins, no-use-before-define, no-unused-labels, no-param-reassign */\nvar Aff = function () {\n  // A unique value for empty.\n  var EMPTY = {};\n\n  /*\n\n  An awkward approximation. We elide evidence we would otherwise need in PS for\n  efficiency sake.\n\n  data Aff eff a\n    = Pure a\n    | Throw Error\n    | Catch (Aff eff a) (Error -> Aff eff a)\n    | Sync (Eff eff a)\n    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))\n    | forall b. Bind (Aff eff b) (b -> Aff eff a)\n    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)\n    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)\n    | Sequential (ParAff aff a)\n\n  */\n  var PURE    = \"Pure\";\n  var THROW   = \"Throw\";\n  var CATCH   = \"Catch\";\n  var SYNC    = \"Sync\";\n  var ASYNC   = \"Async\";\n  var BIND    = \"Bind\";\n  var BRACKET = \"Bracket\";\n  var FORK    = \"Fork\";\n  var SEQ     = \"Sequential\";\n\n  /*\n\n  data ParAff eff a\n    = forall b. Map (b -> a) (ParAff eff b)\n    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)\n    | Alt (ParAff eff a) (ParAff eff a)\n    | ?Par (Aff eff a)\n\n  */\n  var MAP   = \"Map\";\n  var APPLY = \"Apply\";\n  var ALT   = \"Alt\";\n\n  // Various constructors used in interpretation\n  var CONS      = \"Cons\";      // Cons-list, for stacks\n  var RESUME    = \"Resume\";    // Continue indiscriminately\n  var RELEASE   = \"Release\";   // Continue with bracket finalizers\n  var FINALIZER = \"Finalizer\"; // A non-interruptible effect\n  var FINALIZED = \"Finalized\"; // Marker for finalization\n  var FORKED    = \"Forked\";    // Reference to a forked fiber, with resumption stack\n  var FIBER     = \"Fiber\";     // Actual fiber reference\n  var THUNK     = \"Thunk\";     // Primed effect, ready to invoke\n\n  function Aff(tag, _1, _2, _3) {\n    this.tag = tag;\n    this._1  = _1;\n    this._2  = _2;\n    this._3  = _3;\n  }\n\n  function AffCtr(tag) {\n    var fn = function (_1, _2, _3) {\n      return new Aff(tag, _1, _2, _3);\n    };\n    fn.tag = tag;\n    return fn;\n  }\n\n  function nonCanceler(error) {\n    return new Aff(PURE, void 0);\n  }\n\n  function runEff(eff) {\n    try {\n      eff();\n    } catch (error) {\n      setTimeout(function () {\n        throw error;\n      }, 0);\n    }\n  }\n\n  function runSync(left, right, eff) {\n    try {\n      return right(eff());\n    } catch (error) {\n      return left(error);\n    }\n  }\n\n  function runAsync(left, eff, k) {\n    try {\n      return eff(k)();\n    } catch (error) {\n      k(left(error))();\n      return nonCanceler;\n    }\n  }\n\n  var Scheduler = function () {\n    var limit    = 1024;\n    var size     = 0;\n    var ix       = 0;\n    var queue    = new Array(limit);\n    var draining = false;\n\n    function drain() {\n      var thunk;\n      draining = true;\n      while (size !== 0) {\n        size--;\n        thunk     = queue[ix];\n        queue[ix] = void 0;\n        ix        = (ix + 1) % limit;\n        thunk();\n      }\n      draining = false;\n    }\n\n    return {\n      isDraining: function () {\n        return draining;\n      },\n      enqueue: function (cb) {\n        var i, tmp;\n        if (size === limit) {\n          tmp = draining;\n          drain();\n          draining = tmp;\n        }\n\n        queue[(ix + size) % limit] = cb;\n        size++;\n\n        if (!draining) {\n          drain();\n        }\n      }\n    };\n  }();\n\n  function Supervisor(util) {\n    var fibers  = {};\n    var fiberId = 0;\n    var count   = 0;\n\n    return {\n      register: function (fiber) {\n        var fid = fiberId++;\n        fiber.onComplete({\n          rethrow: true,\n          handler: function (result) {\n            return function () {\n              count--;\n              delete fibers[fid];\n            };\n          }\n        })();\n        fibers[fid] = fiber;\n        count++;\n      },\n      isEmpty: function () {\n        return count === 0;\n      },\n      killAll: function (killError, cb) {\n        return function () {\n          if (count === 0) {\n            return cb();\n          }\n\n          var killCount = 0;\n          var kills     = {};\n\n          function kill(fid) {\n            kills[fid] = fibers[fid].kill(killError, function (result) {\n              return function () {\n                delete kills[fid];\n                killCount--;\n                if (util.isLeft(result) && util.fromLeft(result)) {\n                  setTimeout(function () {\n                    throw util.fromLeft(result);\n                  }, 0);\n                }\n                if (killCount === 0) {\n                  cb();\n                }\n              };\n            })();\n          }\n\n          for (var k in fibers) {\n            if (fibers.hasOwnProperty(k)) {\n              killCount++;\n              kill(k);\n            }\n          }\n\n          fibers  = {};\n          fiberId = 0;\n          count   = 0;\n\n          return function (error) {\n            return new Aff(SYNC, function () {\n              for (var k in kills) {\n                if (kills.hasOwnProperty(k)) {\n                  kills[k]();\n                }\n              }\n            });\n          };\n        };\n      }\n    };\n  }\n\n  // Fiber state machine\n  var SUSPENDED   = 0; // Suspended, pending a join.\n  var CONTINUE    = 1; // Interpret the next instruction.\n  var STEP_BIND   = 2; // Apply the next bind.\n  var STEP_RESULT = 3; // Handle potential failure from a result.\n  var PENDING     = 4; // An async effect is running.\n  var RETURN      = 5; // The current stack has returned.\n  var COMPLETED   = 6; // The entire fiber has completed.\n\n  function Fiber(util, supervisor, aff) {\n    // Monotonically increasing tick, increased on each asynchronous turn.\n    var runTick = 0;\n\n    // The current branch of the state machine.\n    var status = SUSPENDED;\n\n    // The current point of interest for the state machine branch.\n    var step      = aff;  // Successful step\n    var fail      = null; // Failure step\n    var interrupt = null; // Asynchronous interrupt\n\n    // Stack of continuations for the current fiber.\n    var bhead = null;\n    var btail = null;\n\n    // Stack of attempts and finalizers for error recovery. Every `Cons` is also\n    // tagged with current `interrupt` state. We use this to track which items\n    // should be ignored or evaluated as a result of a kill.\n    var attempts = null;\n\n    // A special state is needed for Bracket, because it cannot be killed. When\n    // we enter a bracket acquisition or finalizer, we increment the counter,\n    // and then decrement once complete.\n    var bracketCount = 0;\n\n    // Each join gets a new id so they can be revoked.\n    var joinId  = 0;\n    var joins   = null;\n    var rethrow = true;\n\n    // Each invocation of `run` requires a tick. When an asynchronous effect is\n    // resolved, we must check that the local tick coincides with the fiber\n    // tick before resuming. This prevents multiple async continuations from\n    // accidentally resuming the same fiber. A common example may be invoking\n    // the provided callback in `makeAff` more than once, but it may also be an\n    // async effect resuming after the fiber was already cancelled.\n    function run(localRunTick) {\n      var tmp, result, attempt;\n      while (true) {\n        tmp       = null;\n        result    = null;\n        attempt   = null;\n\n        switch (status) {\n        case STEP_BIND:\n          status = CONTINUE;\n          try {\n            step   = bhead(step);\n            if (btail === null) {\n              bhead = null;\n            } else {\n              bhead = btail._1;\n              btail = btail._2;\n            }\n          } catch (e) {\n            status = RETURN;\n            fail   = util.left(e);\n            step   = null;\n          }\n          break;\n\n        case STEP_RESULT:\n          if (util.isLeft(step)) {\n            status = RETURN;\n            fail   = step;\n            step   = null;\n          } else if (bhead === null) {\n            status = RETURN;\n          } else {\n            status = STEP_BIND;\n            step   = util.fromRight(step);\n          }\n          break;\n\n        case CONTINUE:\n          switch (step.tag) {\n          case BIND:\n            if (bhead) {\n              btail = new Aff(CONS, bhead, btail);\n            }\n            bhead  = step._2;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case PURE:\n            if (bhead === null) {\n              status = RETURN;\n              step   = util.right(step._1);\n            } else {\n              status = STEP_BIND;\n              step   = step._1;\n            }\n            break;\n\n          case SYNC:\n            status = STEP_RESULT;\n            step   = runSync(util.left, util.right, step._1);\n            break;\n\n          case ASYNC:\n            status = PENDING;\n            step   = runAsync(util.left, step._1, function (result) {\n              return function () {\n                if (runTick !== localRunTick) {\n                  return;\n                }\n                runTick++;\n                Scheduler.enqueue(function () {\n                  // It's possible to interrupt the fiber between enqueuing and\n                  // resuming, so we need to check that the runTick is still\n                  // valid.\n                  if (runTick !== localRunTick + 1) {\n                    return;\n                  }\n                  status = STEP_RESULT;\n                  step   = result;\n                  run(runTick);\n                });\n              };\n            });\n            return;\n\n          case THROW:\n            status = RETURN;\n            fail   = util.left(step._1);\n            step   = null;\n            break;\n\n          // Enqueue the Catch so that we can call the error handler later on\n          // in case of an exception.\n          case CATCH:\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead    = null;\n            btail    = null;\n            status   = CONTINUE;\n            step     = step._1;\n            break;\n\n          // Enqueue the Bracket so that we can call the appropriate handlers\n          // after resource acquisition.\n          case BRACKET:\n            bracketCount++;\n            if (bhead === null) {\n              attempts = new Aff(CONS, step, attempts, interrupt);\n            } else {\n              attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);\n            }\n            bhead  = null;\n            btail  = null;\n            status = CONTINUE;\n            step   = step._1;\n            break;\n\n          case FORK:\n            status = STEP_RESULT;\n            tmp    = Fiber(util, supervisor, step._2);\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n            if (step._1) {\n              tmp.run();\n            }\n            step = util.right(tmp);\n            break;\n\n          case SEQ:\n            status = CONTINUE;\n            step   = sequential(util, supervisor, step._1);\n            break;\n          }\n          break;\n\n        case RETURN:\n          bhead = null;\n          btail = null;\n          // If the current stack has returned, and we have no other stacks to\n          // resume or finalizers to run, the fiber has halted and we can\n          // invoke all join callbacks. Otherwise we need to resume.\n          if (attempts === null) {\n            status = COMPLETED;\n            step   = interrupt || fail || step;\n          } else {\n            // The interrupt status for the enqueued item.\n            tmp      = attempts._3;\n            attempt  = attempts._1;\n            attempts = attempts._2;\n\n            switch (attempt.tag) {\n            // We cannot recover from an unmasked interrupt. Otherwise we should\n            // continue stepping, or run the exception handler if an exception\n            // was raised.\n            case CATCH:\n              // We should compare the interrupt status as well because we\n              // only want it to apply if there has been an interrupt since\n              // enqueuing the catch.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                status = RETURN;\n              } else if (fail) {\n                status = CONTINUE;\n                step   = attempt._2(util.fromLeft(fail));\n                fail   = null;\n              }\n              break;\n\n            // We cannot resume from an unmasked interrupt or exception.\n            case RESUME:\n              // As with Catch, we only want to ignore in the case of an\n              // interrupt since enqueing the item.\n              if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {\n                status = RETURN;\n              } else {\n                bhead  = attempt._1;\n                btail  = attempt._2;\n                status = STEP_BIND;\n                step   = util.fromRight(step);\n              }\n              break;\n\n            // If we have a bracket, we should enqueue the handlers,\n            // and continue with the success branch only if the fiber has\n            // not been interrupted. If the bracket acquisition failed, we\n            // should not run either.\n            case BRACKET:\n              bracketCount--;\n              if (fail === null) {\n                result   = util.fromRight(step);\n                // We need to enqueue the Release with the same interrupt\n                // status as the Bracket that is initiating it.\n                attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);\n                // We should only coninue as long as the interrupt status has not changed or\n                // we are currently within a non-interruptable finalizer.\n                if (interrupt === tmp || bracketCount > 0) {\n                  status = CONTINUE;\n                  step   = attempt._3(result);\n                }\n              }\n              break;\n\n            // Enqueue the appropriate handler. We increase the bracket count\n            // because it should not be cancelled.\n            case RELEASE:\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              // It has only been killed if the interrupt status has changed\n              // since we enqueued the item, and the bracket count is 0. If the\n              // bracket count is non-zero then we are in a masked state so it's\n              // impossible to be killed.\n              if (interrupt && interrupt !== tmp && bracketCount === 0) {\n                step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);\n              } else if (fail) {\n                step = attempt._1.failed(util.fromLeft(fail))(attempt._2);\n              } else {\n                step = attempt._1.completed(util.fromRight(step))(attempt._2);\n              }\n              fail = null;\n              bracketCount++;\n              break;\n\n            case FINALIZER:\n              bracketCount++;\n              attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);\n              status   = CONTINUE;\n              step     = attempt._1;\n              break;\n\n            case FINALIZED:\n              bracketCount--;\n              status = RETURN;\n              step   = attempt._1;\n              fail   = attempt._2;\n              break;\n            }\n          }\n          break;\n\n        case COMPLETED:\n          for (var k in joins) {\n            if (joins.hasOwnProperty(k)) {\n              rethrow = rethrow && joins[k].rethrow;\n              runEff(joins[k].handler(step));\n            }\n          }\n          joins = null;\n          // If we have an interrupt and a fail, then the thread threw while\n          // running finalizers. This should always rethrow in a fresh stack.\n          if (interrupt && fail) {\n            setTimeout(function () {\n              throw util.fromLeft(fail);\n            }, 0);\n          // If we have an unhandled exception, and no other fiber has joined\n          // then we need to throw the exception in a fresh stack.\n          } else if (util.isLeft(step) && rethrow) {\n            setTimeout(function () {\n              // Guard on reathrow because a completely synchronous fiber can\n              // still have an observer which was added after-the-fact.\n              if (rethrow) {\n                throw util.fromLeft(step);\n              }\n            }, 0);\n          }\n          return;\n        case SUSPENDED:\n          status = CONTINUE;\n          break;\n        case PENDING: return;\n        }\n      }\n    }\n\n    function onComplete(join) {\n      return function () {\n        if (status === COMPLETED) {\n          rethrow = rethrow && join.rethrow;\n          join.handler(step)();\n          return function () {};\n        }\n\n        var jid    = joinId++;\n        joins      = joins || {};\n        joins[jid] = join;\n\n        return function() {\n          if (joins !== null) {\n            delete joins[jid];\n          }\n        };\n      };\n    }\n\n    function kill(error, cb) {\n      return function () {\n        if (status === COMPLETED) {\n          cb(util.right(void 0))();\n          return function () {};\n        }\n\n        var canceler = onComplete({\n          rethrow: false,\n          handler: function (/* unused */) {\n            return cb(util.right(void 0));\n          }\n        })();\n\n        switch (status) {\n        case SUSPENDED:\n          interrupt = util.left(error);\n          status    = COMPLETED;\n          step      = interrupt;\n          run(runTick);\n          break;\n        case PENDING:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            if (status === PENDING) {\n              attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);\n            }\n            status   = RETURN;\n            step     = null;\n            fail     = null;\n            run(++runTick);\n          }\n          break;\n        default:\n          if (interrupt === null) {\n            interrupt = util.left(error);\n          }\n          if (bracketCount === 0) {\n            status = RETURN;\n            step   = null;\n            fail   = null;\n          }\n        }\n\n        return canceler;\n      };\n    }\n\n    function join(cb) {\n      return function () {\n        var canceler = onComplete({\n          rethrow: false,\n          handler: cb\n        })();\n        if (status === SUSPENDED) {\n          run(runTick);\n        }\n        return canceler;\n      };\n    }\n\n    return {\n      kill: kill,\n      join: join,\n      onComplete: onComplete,\n      isSuspended: function () {\n        return status === SUSPENDED;\n      },\n      run: function () {\n        if (status === SUSPENDED) {\n          if (!Scheduler.isDraining()) {\n            Scheduler.enqueue(function () {\n              run(runTick);\n            });\n          } else {\n            run(runTick);\n          }\n        }\n      }\n    };\n  }\n\n  function runPar(util, supervisor, par, cb) {\n    // Table of all forked fibers.\n    var fiberId   = 0;\n    var fibers    = {};\n\n    // Table of currently running cancelers, as a product of `Alt` behavior.\n    var killId    = 0;\n    var kills     = {};\n\n    // Error used for early cancelation on Alt branches.\n    var early     = new Error(\"[ParAff] Early exit\");\n\n    // Error used to kill the entire tree.\n    var interrupt = null;\n\n    // The root pointer of the tree.\n    var root      = EMPTY;\n\n    // Walks a tree, invoking all the cancelers. Returns the table of pending\n    // cancellation fibers.\n    function kill(error, par, cb) {\n      var step  = par;\n      var head  = null;\n      var tail  = null;\n      var count = 0;\n      var kills = {};\n      var tmp, kid;\n\n      loop: while (true) {\n        tmp = null;\n\n        switch (step.tag) {\n        case FORKED:\n          if (step._3 === EMPTY) {\n            tmp = fibers[step._1];\n            kills[count++] = tmp.kill(error, function (result) {\n              return function () {\n                count--;\n                if (count === 0) {\n                  cb(result)();\n                }\n              };\n            });\n          }\n          // Terminal case.\n          if (head === null) {\n            break loop;\n          }\n          // Go down the right side of the tree.\n          step = head._2;\n          if (tail === null) {\n            head = null;\n          } else {\n            head = tail._1;\n            tail = tail._2;\n          }\n          break;\n        case MAP:\n          step = step._2;\n          break;\n        case APPLY:\n        case ALT:\n          if (head) {\n            tail = new Aff(CONS, head, tail);\n          }\n          head = step;\n          step = step._1;\n          break;\n        }\n      }\n\n      if (count === 0) {\n        cb(util.right(void 0))();\n      } else {\n        // Run the cancelation effects. We alias `count` because it's mutable.\n        kid = 0;\n        tmp = count;\n        for (; kid < tmp; kid++) {\n          kills[kid] = kills[kid]();\n        }\n      }\n\n      return kills;\n    }\n\n    // When a fiber resolves, we need to bubble back up the tree with the\n    // result, computing the applicative nodes.\n    function join(result, head, tail) {\n      var fail, step, lhs, rhs, tmp, kid;\n\n      if (util.isLeft(result)) {\n        fail = result;\n        step = null;\n      } else {\n        step = result;\n        fail = null;\n      }\n\n      loop: while (true) {\n        lhs = null;\n        rhs = null;\n        tmp = null;\n        kid = null;\n\n        // We should never continue if the entire tree has been interrupted.\n        if (interrupt !== null) {\n          return;\n        }\n\n        // We've made it all the way to the root of the tree, which means\n        // the tree has fully evaluated.\n        if (head === null) {\n          cb(fail || step)();\n          return;\n        }\n\n        // The tree has already been computed, so we shouldn't try to do it\n        // again. This should never happen.\n        // TODO: Remove this?\n        if (head._3 !== EMPTY) {\n          return;\n        }\n\n        switch (head.tag) {\n        case MAP:\n          if (fail === null) {\n            head._3 = util.right(head._1(util.fromRight(step)));\n            step    = head._3;\n          } else {\n            head._3 = fail;\n          }\n          break;\n        case APPLY:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // If we have a failure we should kill the other side because we\n          // can't possible yield a result anymore.\n          if (fail) {\n            head._3 = fail;\n            tmp     = true;\n            kid     = killId++;\n\n            kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(fail, null, null);\n                } else {\n                  join(fail, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          } else if (lhs === EMPTY || rhs === EMPTY) {\n            // We can only proceed if both sides have resolved.\n            return;\n          } else {\n            step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));\n            head._3 = step;\n          }\n          break;\n        case ALT:\n          lhs = head._1._3;\n          rhs = head._2._3;\n          // We can only proceed if both have resolved or we have a success\n          if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {\n            return;\n          }\n          // If both sides resolve with an error, we should continue with the\n          // first error\n          if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {\n            fail    = step === lhs ? rhs : lhs;\n            step    = null;\n            head._3 = fail;\n          } else {\n            head._3 = step;\n            tmp     = true;\n            kid     = killId++;\n            // Once a side has resolved, we need to cancel the side that is still\n            // pending before we can continue.\n            kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {\n              return function () {\n                delete kills[kid];\n                if (tmp) {\n                  tmp = false;\n                } else if (tail === null) {\n                  join(step, null, null);\n                } else {\n                  join(step, tail._1, tail._2);\n                }\n              };\n            });\n\n            if (tmp) {\n              tmp = false;\n              return;\n            }\n          }\n          break;\n        }\n\n        if (tail === null) {\n          head = null;\n        } else {\n          head = tail._1;\n          tail = tail._2;\n        }\n      }\n    }\n\n    function resolve(fiber) {\n      return function (result) {\n        return function () {\n          delete fibers[fiber._1];\n          fiber._3 = result;\n          join(result, fiber._2._1, fiber._2._2);\n        };\n      };\n    }\n\n    // Walks the applicative tree, substituting non-applicative nodes with\n    // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot\n    // as a mutable slot for memoization. In an unresolved state, the `_3`\n    // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk\n    // the left side first, because both operations are left-associative. As\n    // we `RETURN` from those branches, we then walk the right side.\n    function run() {\n      var status = CONTINUE;\n      var step   = par;\n      var head   = null;\n      var tail   = null;\n      var tmp, fid;\n\n      loop: while (true) {\n        tmp = null;\n        fid = null;\n\n        switch (status) {\n        case CONTINUE:\n          switch (step.tag) {\n          case MAP:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(MAP, step._1, EMPTY, EMPTY);\n            step = step._2;\n            break;\n          case APPLY:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(APPLY, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          case ALT:\n            if (head) {\n              tail = new Aff(CONS, head, tail);\n            }\n            head = new Aff(ALT, EMPTY, step._2, EMPTY);\n            step = step._1;\n            break;\n          default:\n            // When we hit a leaf value, we suspend the stack in the `FORKED`.\n            // When the fiber resolves, it can bubble back up the tree.\n            fid    = fiberId++;\n            status = RETURN;\n            tmp    = step;\n            step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);\n            tmp    = Fiber(util, supervisor, tmp);\n            tmp.onComplete({\n              rethrow: false,\n              handler: resolve(step)\n            })();\n            fibers[fid] = tmp;\n            if (supervisor) {\n              supervisor.register(tmp);\n            }\n          }\n          break;\n        case RETURN:\n          // Terminal case, we are back at the root.\n          if (head === null) {\n            break loop;\n          }\n          // If we are done with the right side, we need to continue down the\n          // left. Otherwise we should continue up the stack.\n          if (head._1 === EMPTY) {\n            head._1 = step;\n            status  = CONTINUE;\n            step    = head._2;\n            head._2 = EMPTY;\n          } else {\n            head._2 = step;\n            step    = head;\n            if (tail === null) {\n              head  = null;\n            } else {\n              head  = tail._1;\n              tail  = tail._2;\n            }\n          }\n        }\n      }\n\n      // Keep a reference to the tree root so it can be cancelled.\n      root = step;\n\n      for (fid = 0; fid < fiberId; fid++) {\n        fibers[fid].run();\n      }\n    }\n\n    // Cancels the entire tree. If there are already subtrees being canceled,\n    // we need to first cancel those joins. We will then add fresh joins for\n    // all pending branches including those that were in the process of being\n    // canceled.\n    function cancel(error, cb) {\n      interrupt = util.left(error);\n      var innerKills;\n      for (var kid in kills) {\n        if (kills.hasOwnProperty(kid)) {\n          innerKills = kills[kid];\n          for (kid in innerKills) {\n            if (innerKills.hasOwnProperty(kid)) {\n              innerKills[kid]();\n            }\n          }\n        }\n      }\n\n      kills = null;\n      var newKills = kill(error, root, cb);\n\n      return function (killError) {\n        return new Aff(ASYNC, function (killCb) {\n          return function () {\n            for (var kid in newKills) {\n              if (newKills.hasOwnProperty(kid)) {\n                newKills[kid]();\n              }\n            }\n            return nonCanceler;\n          };\n        });\n      };\n    }\n\n    run();\n\n    return function (killError) {\n      return new Aff(ASYNC, function (killCb) {\n        return function () {\n          return cancel(killError, killCb);\n        };\n      });\n    };\n  }\n\n  function sequential(util, supervisor, par) {\n    return new Aff(ASYNC, function (cb) {\n      return function () {\n        return runPar(util, supervisor, par, cb);\n      };\n    });\n  }\n\n  Aff.EMPTY       = EMPTY;\n  Aff.Pure        = AffCtr(PURE);\n  Aff.Throw       = AffCtr(THROW);\n  Aff.Catch       = AffCtr(CATCH);\n  Aff.Sync        = AffCtr(SYNC);\n  Aff.Async       = AffCtr(ASYNC);\n  Aff.Bind        = AffCtr(BIND);\n  Aff.Bracket     = AffCtr(BRACKET);\n  Aff.Fork        = AffCtr(FORK);\n  Aff.Seq         = AffCtr(SEQ);\n  Aff.ParMap      = AffCtr(MAP);\n  Aff.ParApply    = AffCtr(APPLY);\n  Aff.ParAlt      = AffCtr(ALT);\n  Aff.Fiber       = Fiber;\n  Aff.Supervisor  = Supervisor;\n  Aff.Scheduler   = Scheduler;\n  Aff.nonCanceler = nonCanceler;\n\n  return Aff;\n}();\n\nexport const _pure = Aff.Pure;\nexport const _throwError = Aff.Throw;\n\nexport function _catchError(aff) {\n  return function (k) {\n    return Aff.Catch(aff, k);\n  };\n}\n\nexport function _map(f) {\n  return function (aff) {\n    if (aff.tag === Aff.Pure.tag) {\n      return Aff.Pure(f(aff._1));\n    } else {\n      return Aff.Bind(aff, function (value) {\n        return Aff.Pure(f(value));\n      });\n    }\n  };\n}\n\nexport function _bind(aff) {\n  return function (k) {\n    return Aff.Bind(aff, k);\n  };\n}\n\nexport function _fork(immediate) {\n  return function (aff) {\n    return Aff.Fork(immediate, aff);\n  };\n}\n\nexport const _liftEffect = Aff.Sync;\n\nexport function _parAffMap(f) {\n  return function (aff) {\n    return Aff.ParMap(f, aff);\n  };\n}\n\nexport function _parAffApply(aff1) {\n  return function (aff2) {\n    return Aff.ParApply(aff1, aff2);\n  };\n}\n\nexport function _parAffAlt(aff1) {\n  return function (aff2) {\n    return Aff.ParAlt(aff1, aff2);\n  };\n}\n\nexport const makeAff = Aff.Async;\n\nexport function generalBracket(acquire) {\n  return function (options) {\n    return function (k) {\n      return Aff.Bracket(acquire, options, k);\n    };\n  };\n}\n\nexport function _makeFiber(util, aff) {\n  return function () {\n    return Aff.Fiber(util, null, aff);\n  };\n}\n\nexport function _makeSupervisedFiber(util, aff) {\n  return function () {\n    var supervisor = Aff.Supervisor(util);\n    return {\n      fiber: Aff.Fiber(util, supervisor, aff),\n      supervisor: supervisor\n    };\n  };\n}\n\nexport function _killAll(error, supervisor, cb) {\n  return supervisor.killAll(error, cb);\n}\n\nexport const _delay = function () {\n  function setDelay(n, k) {\n    if (n === 0 && typeof setImmediate !== \"undefined\") {\n      return setImmediate(k);\n    } else {\n      return setTimeout(k, n);\n    }\n  }\n\n  function clearDelay(n, t) {\n    if (n === 0 && typeof clearImmediate !== \"undefined\") {\n      return clearImmediate(t);\n    } else {\n      return clearTimeout(t);\n    }\n  }\n\n  return function (right, ms) {\n    return Aff.Async(function (cb) {\n      return function () {\n        var timer = setDelay(ms, cb(right()));\n        return function () {\n          return Aff.Sync(function () {\n            return right(clearDelay(ms, timer));\n          });\n        };\n      };\n    });\n  };\n}();\n\nexport const _sequential = Aff.Seq;\n", "// Generated by purs version 0.15.2\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Apply from \"../Control.Apply/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Category from \"../Control.Category/index.js\";\nimport * as Control_Monad from \"../Control.Monad/index.js\";\nimport * as Control_Monad_Error_Class from \"../Control.Monad.Error.Class/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_State_Class from \"../Control.Monad.State.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Control_Monad_Writer_Class from \"../Control.Monad.Writer.Class/index.js\";\nimport * as Data_Bifunctor from \"../Data.Bifunctor/index.js\";\nimport * as Data_Either from \"../Data.Either/index.js\";\nimport * as Data_Exists from \"../Data.Exists/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Monoid from \"../Data.Monoid/index.js\";\nimport * as Data_Semigroup from \"../Data.Semigroup/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect_Aff_Class from \"../Effect.Aff.Class/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nvar Bound = /* #__PURE__ */ (function () {\n    function Bound(value0, value1) {\n        this.value0 = value0;\n        this.value1 = value1;\n    };\n    Bound.create = function (value0) {\n        return function (value1) {\n            return new Bound(value0, value1);\n        };\n    };\n    return Bound;\n})();\nvar FreeT = /* #__PURE__ */ (function () {\n    function FreeT(value0) {\n        this.value0 = value0;\n    };\n    FreeT.create = function (value0) {\n        return new FreeT(value0);\n    };\n    return FreeT;\n})();\nvar Bind = /* #__PURE__ */ (function () {\n    function Bind(value0) {\n        this.value0 = value0;\n    };\n    Bind.create = function (value0) {\n        return new Bind(value0);\n    };\n    return Bind;\n})();\nvar monadTransFreeT = function (dictFunctor) {\n    return {\n        lift: function (dictMonad) {\n            return function (ma) {\n                return new FreeT(function (v) {\n                    return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);\n                });\n            };\n        }\n    };\n};\nvar freeT = /* #__PURE__ */ (function () {\n    return FreeT.create;\n})();\nvar bound = function (m) {\n    return function (f) {\n        return new Bind(Data_Exists.mkExists(new Bound(m, f)));\n    };\n};\nvar functorFreeT = function (dictFunctor) {\n    return function (dictFunctor1) {\n        return {\n            map: function (f) {\n                return function (v) {\n                    if (v instanceof FreeT) {\n                        return new FreeT(function (v1) {\n                            return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));\n                        });\n                    };\n                    if (v instanceof Bind) {\n                        return Data_Exists.runExists(function (v1) {\n                            return bound(v1.value0)((function () {\n                                var $123 = Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f);\n                                return function ($124) {\n                                    return $123(v1.value1($124));\n                                };\n                            })());\n                        })(v.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 64, column 1 - line 66, column 71): \" + [ f.constructor.name, v.constructor.name ]);\n                };\n            }\n        };\n    };\n};\nvar bimapFreeT = function (dictFunctor) {\n    return function (dictFunctor1) {\n        return function (nf) {\n            return function (nm) {\n                return function (v) {\n                    if (v instanceof Bind) {\n                        return Data_Exists.runExists(function (v1) {\n                            return bound((function () {\n                                var $125 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);\n                                return function ($126) {\n                                    return $125(v1.value0($126));\n                                };\n                            })())((function () {\n                                var $127 = bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm);\n                                return function ($128) {\n                                    return $127(v1.value1($128));\n                                };\n                            })());\n                        })(v.value0);\n                    };\n                    if (v instanceof FreeT) {\n                        return new FreeT(function (v1) {\n                            return Data_Functor.map(dictFunctor1)(Data_Functor.map(Data_Either.functorEither)((function () {\n                                var $129 = Data_Functor.map(dictFunctor)(bimapFreeT(dictFunctor)(dictFunctor1)(nf)(nm));\n                                return function ($130) {\n                                    return nf($129($130));\n                                };\n                            })()))(nm(v.value0(Data_Unit.unit)));\n                        });\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 128, column 1 - line 128, column 109): \" + [ nf.constructor.name, nm.constructor.name, v.constructor.name ]);\n                };\n            };\n        };\n    };\n};\nvar hoistFreeT = function (dictFunctor) {\n    return function (dictFunctor1) {\n        return bimapFreeT(dictFunctor)(dictFunctor1)(Control_Category.identity(Control_Category.categoryFn));\n    };\n};\nvar interpret = function (dictFunctor) {\n    return function (dictFunctor1) {\n        return function (nf) {\n            return bimapFreeT(dictFunctor)(dictFunctor1)(nf)(Control_Category.identity(Control_Category.categoryFn));\n        };\n    };\n};\nvar monadFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return {\n            Applicative0: function () {\n                return applicativeFreeT(dictFunctor)(dictMonad);\n            },\n            Bind1: function () {\n                return bindFreeT(dictFunctor)(dictMonad);\n            }\n        };\n    };\n};\nvar bindFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return {\n            bind: function (v) {\n                return function (f) {\n                    if (v instanceof Bind) {\n                        return Data_Exists.runExists(function (v1) {\n                            return bound(v1.value0)(function (x) {\n                                return bound(function (v2) {\n                                    return v1.value1(x);\n                                })(f);\n                            });\n                        })(v.value0);\n                    };\n                    return bound(function (v1) {\n                        return v;\n                    })(f);\n                };\n            },\n            Apply0: function () {\n                return applyFreeT(dictFunctor)(dictMonad);\n            }\n        };\n    };\n};\nvar applyFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return {\n            apply: Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)),\n            Functor0: function () {\n                return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());\n            }\n        };\n    };\n};\nvar applicativeFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return {\n            pure: function (a) {\n                return new FreeT(function (v) {\n                    return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));\n                });\n            },\n            Apply0: function () {\n                return applyFreeT(dictFunctor)(dictMonad);\n            }\n        };\n    };\n};\nvar liftFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return function (fa) {\n            return new FreeT(function (v) {\n                return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));\n            });\n        };\n    };\n};\nvar resume = function (dictFunctor) {\n    return function (dictMonadRec) {\n        var go = function (v) {\n            if (v instanceof FreeT) {\n                return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));\n            };\n            if (v instanceof Bind) {\n                return Data_Exists.runExists(function (v1) {\n                    var v2 = v1.value0(Data_Unit.unit);\n                    if (v2 instanceof FreeT) {\n                        return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {\n                            if (v3 instanceof Data_Either.Left) {\n                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));\n                            };\n                            if (v3 instanceof Data_Either.Right) {\n                                return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {\n                                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);\n                                })(v3.value0))));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 57, column 22 - line 59, column 69): \" + [ v3.constructor.name ]);\n                        });\n                    };\n                    if (v2 instanceof Bind) {\n                        return Data_Exists.runExists(function (v3) {\n                            return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {\n                                return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);\n                            })));\n                        })(v2.value0);\n                    };\n                    throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 55, column 7 - line 62, column 60): \" + [ v2.constructor.name ]);\n                })(v.value0);\n            };\n            throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 51, column 3 - line 51, column 75): \" + [ v.constructor.name ]);\n        };\n        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);\n    };\n};\nvar runFreeT = function (dictFunctor) {\n    return function (dictMonadRec) {\n        return function (interp) {\n            var go = function (v) {\n                if (v instanceof Data_Either.Left) {\n                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));\n                };\n                if (v instanceof Data_Either.Right) {\n                    return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 144, column 3 - line 144, column 63): \" + [ v.constructor.name ]);\n            };\n            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));\n        };\n    };\n};\nvar semigroupFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return function (dictSemigroup) {\n            return {\n                append: Control_Apply.lift2(applyFreeT(dictFunctor)(dictMonad))(Data_Semigroup.append(dictSemigroup))\n            };\n        };\n    };\n};\nvar monadAskFreeT = function (dictFunctor) {\n    return function (dictMonadAsk) {\n        return {\n            ask: Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadAsk.Monad0())(Control_Monad_Reader_Class.ask(dictMonadAsk)),\n            Monad0: function () {\n                return monadFreeT(dictFunctor)(dictMonadAsk.Monad0());\n            }\n        };\n    };\n};\nvar monadEffectFreeT = function (dictFunctor) {\n    return function (dictMonadEffect) {\n        return {\n            liftEffect: (function () {\n                var $131 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadEffect.Monad0());\n                var $132 = Effect_Class.liftEffect(dictMonadEffect);\n                return function ($133) {\n                    return $131($132($133));\n                };\n            })(),\n            Monad0: function () {\n                return monadFreeT(dictFunctor)(dictMonadEffect.Monad0());\n            }\n        };\n    };\n};\nvar monadAffFreeT = function (dictFunctor) {\n    return function (dictMonadAff) {\n        return {\n            liftAff: (function () {\n                var $134 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))((dictMonadAff.MonadEffect0()).Monad0());\n                var $135 = Effect_Aff_Class.liftAff(dictMonadAff);\n                return function ($136) {\n                    return $134($135($136));\n                };\n            })(),\n            MonadEffect0: function () {\n                return monadEffectFreeT(dictFunctor)(dictMonadAff.MonadEffect0());\n            }\n        };\n    };\n};\nvar monadStateFreeT = function (dictFunctor) {\n    return function (dictMonadState) {\n        return {\n            state: (function () {\n                var $137 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadState.Monad0());\n                var $138 = Control_Monad_State_Class.state(dictMonadState);\n                return function ($139) {\n                    return $137($138($139));\n                };\n            })(),\n            Monad0: function () {\n                return monadFreeT(dictFunctor)(dictMonadState.Monad0());\n            }\n        };\n    };\n};\nvar monadTellFreeT = function (dictFunctor) {\n    return function (dictMonadTell) {\n        return {\n            tell: (function () {\n                var $140 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadTell.Monad1());\n                var $141 = Control_Monad_Writer_Class.tell(dictMonadTell);\n                return function ($142) {\n                    return $140($141($142));\n                };\n            })(),\n            Semigroup0: dictMonadTell.Semigroup0,\n            Monad1: function () {\n                return monadFreeT(dictFunctor)(dictMonadTell.Monad1());\n            }\n        };\n    };\n};\nvar monadThrowFreeT = function (dictFunctor) {\n    return function (dictMonadThrow) {\n        return {\n            throwError: (function () {\n                var $143 = Control_Monad_Trans_Class.lift(monadTransFreeT(dictFunctor))(dictMonadThrow.Monad0());\n                var $144 = Control_Monad_Error_Class.throwError(dictMonadThrow);\n                return function ($145) {\n                    return $143($144($145));\n                };\n            })(),\n            Monad0: function () {\n                return monadFreeT(dictFunctor)(dictMonadThrow.Monad0());\n            }\n        };\n    };\n};\nvar monadRecFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return {\n            tailRecM: function (f) {\n                var go = function (s) {\n                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {\n                        if (v instanceof Control_Monad_Rec_Class.Loop) {\n                            return go(v.value0);\n                        };\n                        if (v instanceof Control_Monad_Rec_Class.Done) {\n                            return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);\n                        };\n                        throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 87, column 15 - line 89, column 25): \" + [ v.constructor.name ]);\n                    });\n                };\n                return go;\n            },\n            Monad0: function () {\n                return monadFreeT(dictFunctor)(dictMonad);\n            }\n        };\n    };\n};\nvar monoidFreeT = function (dictFunctor) {\n    return function (dictMonad) {\n        return function (dictMonoid) {\n            return {\n                mempty: Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(Data_Monoid.mempty(dictMonoid)),\n                Semigroup0: function () {\n                    return semigroupFreeT(dictFunctor)(dictMonad)(dictMonoid.Semigroup0());\n                }\n            };\n        };\n    };\n};\nvar substFreeT = function (dictMonad) {\n    return function (dictFunctor) {\n        return function (fBind) {\n            return function (v) {\n                if (v instanceof Bind) {\n                    return Data_Exists.runExists(function (v1) {\n                        return bound((function () {\n                            var $146 = substFreeT(dictMonad)(dictFunctor)(fBind);\n                            return function ($147) {\n                                return $146(v1.value0($147));\n                            };\n                        })())((function () {\n                            var $148 = substFreeT(dictMonad)(dictFunctor)(fBind);\n                            return function ($149) {\n                                return $148(v1.value1($149));\n                            };\n                        })());\n                    })(v.value0);\n                };\n                if (v instanceof FreeT) {\n                    return Control_Bind.join(bindFreeT(dictFunctor)(dictMonad))(new FreeT(function (v1) {\n                        return Data_Functor.mapFlipped(((dictMonad.Bind1()).Apply0()).Functor0())(v.value0(Data_Unit.unit))(function (v2) {\n                            if (v2 instanceof Data_Either.Left) {\n                                return new Data_Either.Left(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v2.value0));\n                            };\n                            if (v2 instanceof Data_Either.Right) {\n                                return new Data_Either.Left(bound(function (v3) {\n                                    return fBind(v2.value0);\n                                })(substFreeT(dictMonad)(dictFunctor)(fBind)));\n                            };\n                            throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 136, column 60 - line 138, column 69): \" + [ v2.constructor.name ]);\n                        });\n                    }));\n                };\n                throw new Error(\"Failed pattern match at Control.Monad.Free.Trans (line 134, column 1 - line 134, column 101): \" + [ fBind.constructor.name, v.constructor.name ]);\n            };\n        };\n    };\n};\nexport {\n    freeT,\n    liftFreeT,\n    hoistFreeT,\n    interpret,\n    bimapFreeT,\n    substFreeT,\n    resume,\n    runFreeT,\n    functorFreeT,\n    applyFreeT,\n    applicativeFreeT,\n    bindFreeT,\n    monadFreeT,\n    monadTransFreeT,\n    monadRecFreeT,\n    semigroupFreeT,\n    monoidFreeT,\n    monadEffectFreeT,\n    monadAffFreeT,\n    monadAskFreeT,\n    monadTellFreeT,\n    monadStateFreeT,\n    monadThrowFreeT\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Free_Trans from \"../Control.Monad.Free.Trans/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Monad_Trans_Class from \"../Control.Monad.Trans.Class/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Identity from \"../Data.Identity/index.js\";\nimport * as Data_List_Types from \"../Data.List.Types/index.js\";\nimport * as Data_Newtype from \"../Data.Newtype/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nvar safely = function (dictMonadRec) {\n    return function (f) {\n        var lower = function (dictMonadRec1) {\n            return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec1)((function () {\n                var $17 = Control_Applicative.pure((dictMonadRec1.Monad0()).Applicative0());\n                var $18 = Data_Newtype.unwrap();\n                return function ($19) {\n                    return $17($18($19));\n                };\n            })());\n        };\n        return lower(dictMonadRec)(f(Control_Monad_Free_Trans.monadRecFreeT(Data_Identity.functorIdentity)(dictMonadRec.Monad0()))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Data_Identity.functorIdentity))(dictMonadRec.Monad0()))(lower(dictMonadRec)));\n    };\n};\nvar traverse_ = function (dictFoldable) {\n    return function (dictMonadRec) {\n        return function (f) {\n            return function (xs) {\n                return safely(dictMonadRec)(function (dictMonadRec1) {\n                    return function (lift) {\n                        return function (v) {\n                            return Data_Foldable.traverse_((dictMonadRec1.Monad0()).Applicative0())(dictFoldable)(function ($20) {\n                                return lift(f($20));\n                            })(xs);\n                        };\n                    };\n                });\n            };\n        };\n    };\n};\nvar replicateM_ = function (dictMonadRec) {\n    return function (n) {\n        return function (x) {\n            var step = function (v) {\n                if (v === 0) {\n                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(Data_Unit.unit));\n                };\n                return Data_Functor.voidLeft((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(x)(new Control_Monad_Rec_Class.Loop(v - 1 | 0));\n            };\n            return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(step)(n);\n        };\n    };\n};\nvar for_ = function (dictFoldable) {\n    return function (dictMonadRec) {\n        return Data_Function.flip(traverse_(dictFoldable)(dictMonadRec));\n    };\n};\nvar foldM = function (dictMonadRec) {\n    return function (f) {\n        var step = function (a) {\n            return function (v) {\n                if (v instanceof Data_List_Types.Nil) {\n                    return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(a));\n                };\n                if (v instanceof Data_List_Types.Cons) {\n                    return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(f(a)(v.value0))(function (a$prime) {\n                        return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop({\n                            a: a$prime,\n                            b: v.value1\n                        }));\n                    });\n                };\n                throw new Error(\"Failed pattern match at Control.Safely (line 69, column 3 - line 69, column 60): \" + [ a.constructor.name, v.constructor.name ]);\n            };\n        };\n        return Control_Monad_Rec_Class.tailRecM2(dictMonadRec)(step);\n    };\n};\nexport {\n    safely,\n    replicateM_,\n    traverse_,\n    for_,\n    foldM\n};\n", "\"use strict\"\n\n/*\nManage observedState-observer dependencies\n*/\n\nexport const newObserver = (f /* :: Observer -> Effect Unit */) => () => {\n  const observer = {\n    callbacks: new Set(), // :: Set<() => void)>\n    dependencies: new Set(),\n  };\n  observer.effect = f(observer); // :: Effect Unit\n  return observer;\n};\n\nexport const newObservedState = () => new Set()\n\nexport const connect = (observer) => (observedState) => () => {\n  observer.dependencies.add(observedState);\n  observedState.add(observer);\n};\n\nexport const disconnect = (observer) => (observedState) => () => {\n  observer.dependencies.delete(observedState);\n  observedState.delete(observer);\n};\n\nexport const disconnectAll = (observer) => () => {\n  observer.dependencies.forEach((observedState) => {\n    disconnect(observer)(observedState)();\n  });\n};\n\nexport const addObserverCallbacks = (observer) => (callback) => () => {\n  observer.callbacks.add(callback);\n};\n\nexport const clearObserverCallbacks = (observer) => () => {\n  observer.callbacks.clear();\n};\n\nexport const getObserverCallbacks =  (observer) => () => {\n  return [...observer.callbacks];\n}\n\nexport const getObserverEffect = (observer) => observer.effect\n\nexport const getObservers = (observedState) => () => {\n  return [...observedState];\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Safely from \"../Control.Safely/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nvar runCallbackAndClear = function (observer) {\n    return function __do() {\n        var callbacks = $foreign.getObserverCallbacks(observer)();\n        Control_Safely.for_(Data_Foldable.foldableArray)(Control_Monad_Rec_Class.monadRecEffect)(callbacks)(function (v) {\n            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);\n        })();\n        return $foreign.clearObserverCallbacks(observer)();\n    };\n};\nexport {\n    newObserver,\n    newObservedState,\n    connect,\n    disconnect,\n    disconnectAll,\n    addObserverCallbacks,\n    clearObserverCallbacks,\n    getObserverCallbacks,\n    getObserverEffect,\n    getObservers\n} from \"./foreign.js\";\nexport {\n    runCallbackAndClear\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Monad_Reader_Trans from \"../Control.Monad.Reader.Trans/index.js\";\nimport * as Control_Monad_Rec_Class from \"../Control.Monad.Rec.Class/index.js\";\nimport * as Control_Safely from \"../Control.Safely/index.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Traversable from \"../Data.Traversable/index.js\";\nimport * as Data_Tuple from \"../Data.Tuple/index.js\";\nimport * as Data_Unfoldable from \"../Data.Unfoldable/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Jelly_Data_Jelly_Core from \"../Jelly.Data.Jelly.Core/index.js\";\nvar JellyId = function (x) {\n    return x;\n};\nvar Jelly = function (x) {\n    return x;\n};\nvar monadRecJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.monadRecReaderT(Control_Monad_Rec_Class.monadRecEffect);\nvar monadJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.monadReaderT(Effect.monadEffect);\nvar monadEffectJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.monadEffectReader(Effect_Class.monadEffectEffect);\nvar monadAskJellyInternalJell = /* #__PURE__ */ Control_Monad_Reader_Trans.monadAskReaderT(Effect.monadEffect);\nvar functorJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.functorReaderT(Effect.functorEffect);\nvar bindJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.bindReaderT(Effect.bindEffect);\nvar applyJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.applyReaderT(Effect.applyEffect);\nvar applicativeJelly = /* #__PURE__ */ Control_Monad_Reader_Trans.applicativeReaderT(Effect.applicativeEffect);\nvar stopJelly = function (dictMonadEffect) {\n    return function (v) {\n        return Effect_Class.liftEffect(dictMonadEffect)(v);\n    };\n};\nvar runJelly = function (observer) {\n    return function (context) {\n        return function (v) {\n            return Control_Monad_Reader_Trans.runReaderT(v)({\n                observer: new Data_Maybe.Just(observer),\n                context: context\n            });\n        };\n    };\n};\nvar newJelly = function (dictMonadEffect) {\n    return function (dictEq) {\n        return function (initValue) {\n            return Effect_Class.liftEffect(dictMonadEffect)(function __do() {\n                var valueRef = Effect_Ref[\"new\"](initValue)();\n                var observedState = Jelly_Data_Jelly_Core.newObservedState();\n                var modifier = function (f) {\n                    return Effect_Class.liftEffect(monadEffectJelly)(function __do() {\n                        var oldValue = Effect_Ref.read(valueRef)();\n                        var newValue = f(oldValue);\n                        var $24 = Data_Eq.notEq(dictEq)(oldValue)(newValue);\n                        if ($24) {\n                            var observers = Jelly_Data_Jelly_Core.getObservers(observedState)();\n                            Control_Safely.for_(Data_Foldable.foldableArray)(Control_Monad_Rec_Class.monadRecEffect)(observers)(function (observer) {\n                                return function __do() {\n                                    Jelly_Data_Jelly_Core.disconnectAll(observer)();\n                                    return Jelly_Data_Jelly_Core.runCallbackAndClear(observer)();\n                                };\n                            })();\n                            Effect_Ref.write(newValue)(valueRef)();\n                            return Control_Safely.for_(Data_Foldable.foldableArray)(Control_Monad_Rec_Class.monadRecEffect)(observers)(function (observer) {\n                                return Jelly_Data_Jelly_Core.getObserverEffect(observer);\n                            })();\n                        };\n                        return Data_Unit.unit;\n                    });\n                };\n                var getter = Control_Bind.bind(bindJelly)(Control_Monad_Reader_Class.ask(monadAskJellyInternalJell))(function (v) {\n                    return Control_Bind.discard(Control_Bind.discardUnit)(bindJelly)(Effect_Class.liftEffect(monadEffectJelly)((function () {\n                        if (v.observer instanceof Data_Maybe.Just) {\n                            return Jelly_Data_Jelly_Core.connect(v.observer.value0)(observedState);\n                        };\n                        if (v.observer instanceof Data_Maybe.Nothing) {\n                            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);\n                        };\n                        throw new Error(\"Failed pattern match at Jelly.Data.Jelly (line 56, column 18 - line 58, column 29): \" + [ v.observer.constructor.name ]);\n                    })()))(function () {\n                        return Effect_Class.liftEffect(monadEffectJelly)(Effect_Ref.read(valueRef));\n                    });\n                });\n                return new Data_Tuple.Tuple(getter, modifier);\n            });\n        };\n    };\n};\nvar newJellies = function (dictMonadEffect) {\n    return function (dictEq) {\n        return function (n) {\n            return function (initValue) {\n                return Control_Bind.bind((dictMonadEffect.Monad0()).Bind1())(Data_Unfoldable.replicateA((dictMonadEffect.Monad0()).Applicative0())(Data_Unfoldable.unfoldableArray)(Data_Traversable.traversableArray)(n)(newJelly(dictMonadEffect)(dictEq)(initValue)))(function (res) {\n                    return Control_Applicative.pure((dictMonadEffect.Monad0()).Applicative0())(new Data_Tuple.Tuple(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.fst)(res), Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.snd)(res)));\n                });\n            };\n        };\n    };\n};\nvar alone = function (context) {\n    return function (v) {\n        return Control_Monad_Reader_Trans.runReaderT(v)({\n            observer: Data_Maybe.Nothing.value,\n            context: context\n        });\n    };\n};\nvar addCleaner = function (cleaner) {\n    return Control_Bind.bind(bindJelly)(Control_Monad_Reader_Class.ask(monadAskJellyInternalJell))(function (v) {\n        var cleanerEffect = alone(v.context)(cleaner);\n        if (v.observer instanceof Data_Maybe.Just) {\n            return Effect_Class.liftEffect(monadEffectJelly)(Jelly_Data_Jelly_Core.addObserverCallbacks(v.observer.value0)(cleanerEffect));\n        };\n        if (v.observer instanceof Data_Maybe.Nothing) {\n            return Control_Applicative.pure(applicativeJelly)(Data_Unit.unit);\n        };\n        throw new Error(\"Failed pattern match at Jelly.Data.Jelly (line 96, column 3 - line 99, column 25): \" + [ v.observer.constructor.name ]);\n    });\n};\nvar launchJelly = function (jelly) {\n    return Control_Bind.bind(bindJelly)(Control_Monad_Reader_Class.ask(monadAskJellyInternalJell))(function (v) {\n        return Control_Bind.bind(bindJelly)(Effect_Class.liftEffect(monadEffectJelly)(Jelly_Data_Jelly_Core.newObserver(function (observer) {\n            return runJelly(observer)(v.context)(jelly);\n        })))(function (observer) {\n            return Control_Bind.discard(Control_Bind.discardUnit)(bindJelly)(Effect_Class.liftEffect(monadEffectJelly)(runJelly(observer)(v.context)(jelly)))(function () {\n                var stopJellyEffect = function __do() {\n                    Jelly_Data_Jelly_Core.disconnectAll(observer)();\n                    return Jelly_Data_Jelly_Core.runCallbackAndClear(observer)();\n                };\n                return Control_Bind.discard(Control_Bind.discardUnit)(bindJelly)(addCleaner(Effect_Class.liftEffect(monadEffectJelly)(stopJellyEffect)))(function () {\n                    return Control_Applicative.pure(applicativeJelly)(stopJellyEffect);\n                });\n            });\n        });\n    });\n};\nvar launchJelly_ = function (jelly) {\n    return Control_Bind.bind(bindJelly)(Control_Monad_Reader_Class.ask(monadAskJellyInternalJell))(function (v) {\n        return Control_Bind.bind(bindJelly)(Effect_Class.liftEffect(monadEffectJelly)(Jelly_Data_Jelly_Core.newObserver(function (observer) {\n            return runJelly(observer)(v.context)(jelly);\n        })))(function (observer) {\n            return Control_Bind.discard(Control_Bind.discardUnit)(bindJelly)(Effect_Class.liftEffect(monadEffectJelly)(runJelly(observer)(v.context)(jelly)))(function () {\n                var stopJellyEffect = function __do() {\n                    Jelly_Data_Jelly_Core.disconnectAll(observer)();\n                    return Jelly_Data_Jelly_Core.runCallbackAndClear(observer)();\n                };\n                return addCleaner(Effect_Class.liftEffect(monadEffectJelly)(stopJellyEffect));\n            });\n        });\n    });\n};\nexport {\n    Jelly,\n    JellyId,\n    alone,\n    runJelly,\n    newJelly,\n    newJellies,\n    addCleaner,\n    launchJelly,\n    launchJelly_,\n    stopJelly,\n    functorJelly,\n    applyJelly,\n    applicativeJelly,\n    bindJelly,\n    monadJelly,\n    monadEffectJelly,\n    monadAskJellyInternalJell,\n    monadRecJelly\n};\n", "var getEffProp = function (name) {\n  return function (doc) {\n    return function () {\n      return doc[name];\n    };\n  };\n};\n\nexport const url = getEffProp(\"URL\");\nexport const documentURI = getEffProp(\"documentURI\");\nexport const origin = getEffProp(\"origin\");\nexport const compatMode = getEffProp(\"compatMode\");\nexport const characterSet = getEffProp(\"characterSet\");\nexport const contentType = getEffProp(\"contentType\");\nexport function _doctype(doc) {\n  return doc[\"doctype\"];\n}\nexport const _documentElement = getEffProp(\"documentElement\");\n\nexport function getElementsByTagName(localName) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByTagName(localName);\n    };\n  };\n}\n\nexport function _getElementsByTagNameNS(ns) {\n  return function (localName) {\n    return function (doc) {\n      return function () {\n        return doc.getElementsByTagNameNS(ns, localName);\n      };\n    };\n  };\n}\n\nexport function getElementsByClassName(classNames) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByClassName(classNames);\n    };\n  };\n}\n\nexport function createElement(localName) {\n  return function (doc) {\n    return function () {\n      return doc.createElement(localName);\n    };\n  };\n}\n\nexport function _createElementNS(ns) {\n  return function (qualifiedName) {\n    return function (doc) {\n      return function () {\n        return doc.createElementNS(ns, qualifiedName);\n      };\n    };\n  };\n}\n\nexport function createDocumentFragment(doc) {\n  return function () {\n    return doc.createDocumentFragment();\n  };\n}\n\nexport function createTextNode(data) {\n  return function (doc) {\n    return function () {\n      return doc.createTextNode(data);\n    };\n  };\n}\n\nexport function createComment(data) {\n  return function (doc) {\n    return function () {\n      return doc.createComment(data);\n    };\n  };\n}\n\nexport function createProcessingInstruction(target) {\n  return function (data) {\n    return function (doc) {\n      return function () {\n        return doc.createProcessingInstruction(target, data);\n      };\n    };\n  };\n}\n\nexport function importNode(node) {\n  return function (deep) {\n    return function (doc) {\n      return function () {\n        return doc.importNode(node, deep);\n      };\n    };\n  };\n}\n\nexport function adoptNode(node) {\n  return function (doc) {\n    return function () {\n      return doc.adoptNode(node);\n    };\n  };\n}\n", "/* eslint-disable no-eq-null, eqeqeq */\n\nconst nullImpl = null;\nexport { nullImpl as null };\n\nexport function nullable(a, r, f) {\n  return a == null ? r : f(a);\n}\n\nexport function notNull(x) {\n  return x;\n}\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Eq from \"../Data.Eq/index.js\";\nimport * as Data_Function from \"../Data.Function/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Ord from \"../Data.Ord/index.js\";\nimport * as Data_Show from \"../Data.Show/index.js\";\nvar toNullable = /* #__PURE__ */ Data_Maybe.maybe($foreign[\"null\"])($foreign.notNull);\nvar toMaybe = function (n) {\n    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);\n};\nvar showNullable = function (dictShow) {\n    return {\n        show: (function () {\n            var $5 = Data_Maybe.maybe(\"null\")(Data_Show.show(dictShow));\n            return function ($6) {\n                return $5(toMaybe($6));\n            };\n        })()\n    };\n};\nvar eqNullable = function (dictEq) {\n    return {\n        eq: Data_Function.on(Data_Eq.eq(Data_Maybe.eqMaybe(dictEq)))(toMaybe)\n    };\n};\nvar ordNullable = function (dictOrd) {\n    return {\n        compare: Data_Function.on(Data_Ord.compare(Data_Maybe.ordMaybe(dictOrd)))(toMaybe),\n        Eq0: function () {\n            return eqNullable(dictOrd.Eq0());\n        }\n    };\n};\nvar eq1Nullable = {\n    eq1: function (dictEq) {\n        return Data_Eq.eq(eqNullable(dictEq));\n    }\n};\nvar ord1Nullable = {\n    compare1: function (dictOrd) {\n        return Data_Ord.compare(ordNullable(dictOrd));\n    },\n    Eq10: function () {\n        return eq1Nullable;\n    }\n};\nexport {\n    null,\n    notNull\n} from \"./foreign.js\";\nexport {\n    toMaybe,\n    toNullable,\n    showNullable,\n    eqNullable,\n    eq1Nullable,\n    ordNullable,\n    ord1Nullable\n};\n", "var getProp = function (name) {\n  return function (doctype) {\n    return doctype[name];\n  };\n};\n\nexport const _namespaceURI = getProp(\"namespaceURI\");\nexport const _prefix = getProp(\"prefix\");\nexport const localName = getProp(\"localName\");\nexport const tagName = getProp(\"tagName\");\n\nexport function id(node) {\n  return function () {\n    return node.id;\n  };\n}\n\nexport function setId(id) {\n  return function (node) {\n    return function () {\n      node.id = id;\n    };\n  };\n}\n\nexport function className(node) {\n  return function () {\n    return node.className;\n  };\n}\n\nexport function classList(element) {\n  return function () {\n    return element.classList;\n  };\n}\n\nexport function setClassName(className) {\n  return function (node) {\n    return function () {\n      node.className = className;\n    };\n  };\n}\n\nexport function getElementsByTagName(localName) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByTagName(localName);\n    };\n  };\n}\n\nexport function _getElementsByTagNameNS(ns) {\n  return function (localName) {\n    return function (doc) {\n      return function () {\n        return doc.getElementsByTagNameNS(ns, localName);\n      };\n    };\n  };\n}\n\nexport function getElementsByClassName(classNames) {\n  return function (doc) {\n    return function () {\n      return doc.getElementsByClassName(classNames);\n    };\n  };\n}\n\nexport function setAttribute(name) {\n  return function (value) {\n    return function (element) {\n      return function () {\n        element.setAttribute(name, value);\n      };\n    };\n  };\n}\n\nexport function _getAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.getAttribute(name);\n    };\n  };\n}\n\nexport function hasAttribute(name) {\n  return function (element) {\n    return function () {\n      return element.hasAttribute(name);\n    };\n  };\n}\n\nexport function removeAttribute(name) {\n  return function (element) {\n    return function () {\n      element.removeAttribute(name);\n    };\n  };\n}\n\nexport function matches(selector) {\n  return function(element) {\n    return function () {\n      return element.matches(selector);\n    };\n  };\n}\n\nexport function _closest(selector) {\n  return function(element) {\n    return function () {\n      return element.closest(selector);\n    };\n  };\n}\n\n// - CSSOM ---------------------------------------------------------------------\n\nexport function scrollTop(node) {\n  return function () {\n    return node.scrollTop;\n  };\n}\n\nexport function setScrollTop(scrollTop) {\n  return function (node) {\n    return function () {\n      node.scrollTop = scrollTop;\n    };\n  };\n}\n\nexport function scrollLeft(node) {\n  return function () {\n    return node.scrollLeft;\n  };\n}\n\nexport function setScrollLeft(scrollLeft) {\n  return function (node) {\n    return function () {\n      node.scrollLeft = scrollLeft;\n    };\n  };\n}\n\nexport function scrollWidth(el) {\n  return function () {\n    return el.scrollWidth;\n  };\n}\n\nexport function scrollHeight(el) {\n  return function () {\n    return el.scrollHeight;\n  };\n}\n\nexport function clientTop(el) {\n  return function () {\n    return el.clientTop;\n  };\n}\n\nexport function clientLeft(el) {\n  return function () {\n    return el.clientLeft;\n  };\n}\n\nexport function clientWidth(el) {\n  return function () {\n    return el.clientWidth;\n  };\n}\n\nexport function clientHeight(el) {\n  return function () {\n    return el.clientHeight;\n  };\n}\n\nexport function getBoundingClientRect(el) {\n  return function () {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.width,\n      height: rect.height,\n      x: rect.x,\n      y: rect.y\n    };\n  };\n}\n\nexport function _attachShadow(props) {\n  return function (el) {\n    return function() {\n      return el.attachShadow(props);\n    };\n  };\n}\n", "var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport const children = getEffProp(\"children\");\nexport const _firstElementChild = getEffProp(\"firstElementChild\");\nexport const _lastElementChild = getEffProp(\"lastElementChild\");\nexport const childElementCount = getEffProp(\"childElementCount\");\n\nexport function _querySelector(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelector(selector);\n    };\n  };\n}\n\nexport function querySelectorAll(selector) {\n  return function (node) {\n    return function () {\n      return node.querySelectorAll(selector);\n    };\n  };\n}\n", "var getEffProp = function (name) {\n  return function (node) {\n    return function () {\n      return node[name];\n    };\n  };\n};\n\nexport function nodeTypeIndex(node) {\n  return node.nodeType;\n}\n\nexport function nodeName(node) {\n  return node.nodeName;\n}\n\nexport const baseURI = getEffProp(\"baseURI\");\nexport const _ownerDocument = getEffProp(\"ownerDocument\");\nexport const _parentNode = getEffProp(\"parentNode\");\nexport const _parentElement = getEffProp(\"parentElement\");\n\nexport function hasChildNodes(node) {\n  return function () {\n    return node.hasChildNodes();\n  };\n}\n\nexport const childNodes = getEffProp(\"childNodes\");\nexport const _firstChild = getEffProp(\"firstChild\");\nexport const _lastChild = getEffProp(\"lastChild\");\nexport const _previousSibling = getEffProp(\"previousSibling\");\nexport const _nextSibling = getEffProp(\"nextSibling\");\nexport const _nodeValue = getEffProp(\"nodeValue\");\n\nexport function setNodeValue(value) {\n  return function (node) {\n    return function () {\n      node.nodeValue = value;\n    };\n  };\n}\n\nexport const textContent = getEffProp(\"textContent\");\n\nexport function setTextContent(value) {\n  return function (node) {\n    return function () {\n      node.textContent = value;\n    };\n  };\n}\n\nexport function normalize(node) {\n  return function () {\n    node.normalize();\n  };\n}\n\nexport function clone(node) {\n  return function () {\n    return node.cloneNode(false);\n  };\n}\n\nexport function deepClone(node) {\n  return function () {\n    return node.cloneNode(true);\n  };\n}\n\nexport function isEqualNode(node1) {\n  return function (node2) {\n    return function () {\n      return node1.isEqualNode(node2);\n    };\n  };\n}\n\nexport function compareDocumentPositionBits(node1) {\n  return function (node2) {\n    return function () {\n      return node1.compareDocumentPosition(node2);\n    };\n  };\n}\n\nexport function contains(node1) {\n  return function (node2) {\n    return function () {\n      return node1.contains(node2);\n    };\n  };\n}\n\nexport function _lookupPrefix(prefix) {\n  return function (node) {\n    return function () {\n      return node.lookupPrefix(prefix);\n    };\n  };\n}\n\nexport function _lookupNamespaceURI(ns) {\n  return function (node) {\n    return function () {\n      return node.lookupNamespaceURI(ns);\n    };\n  };\n}\n\nexport function isDefaultNamespace(ns) {\n  return function (node) {\n    return function () {\n      return node.isDefaultNamespace(ns);\n    };\n  };\n}\n\nexport function insertBefore(node1) {\n  return function (node2) {\n    return function (parent) {\n      return function () {\n        parent.insertBefore(node1, node2);\n      };\n    };\n  };\n}\n\nexport function appendChild(node) {\n  return function (parent) {\n    return function () {\n      parent.appendChild(node);\n    };\n  };\n}\n\nexport function replaceChild(newChild) {\n  return function (oldChild) {\n    return function (parent) {\n      return function () {\n        parent.replaceChild(newChild, oldChild);\n      };\n    };\n  };\n}\n\nexport function removeChild(node) {\n  return function (parent) {\n    return function () {\n      parent.removeChild(node);\n    };\n  };\n}\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toCharacterData = Unsafe_Coerce.unsafeCoerce;\nvar fromNonDocumentTypeChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Text\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Text\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Text\");\nvar fromChildNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Text\");\nvar fromCharacterData = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"Text\");\nexport {\n    splitText,\n    wholeText\n} from \"./foreign.js\";\nexport {\n    fromCharacterData,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromEventTarget,\n    toNode,\n    toCharacterData,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toEventTarget\n};\n", "const windowImpl = function () {\n  return window;\n};\nexport { windowImpl as window };\n", "export function _documentElement(doc) {\n  return function () {\n    return doc.documentElement;\n  };\n}\n\nexport function _head(doc) {\n  return function () {\n    return doc.head;\n  };\n}\n\nexport function _body(doc) {\n  return function () {\n    return doc.body;\n  };\n}\n\nexport function _readyState(doc) {\n  return function () {\n    return doc.readyState;\n  };\n}\n\nexport function _activeElement(doc) {\n  return function () {\n    return doc.activeElement;\n  };\n}\n\nexport function _currentScript(doc) {\n  return function () {\n    return doc.currentScript;\n  };\n}\n\nexport function referrer(doc) {\n  return function () {\n    return doc.referrer;\n  };\n}\n\nexport function title(doc) {\n  return function () {\n    return doc.title;\n  };\n}\n\nexport function setTitle(title) {\n  return function (doc) {\n    return function () {\n      doc.title = title;\n    };\n  };\n}\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nimport * as Web_HTML_HTMLDocument_ReadyState from \"../Web.HTML.HTMLDocument.ReadyState/index.js\";\nimport * as Web_Internal_FFI from \"../Web.Internal.FFI/index.js\";\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonElementParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toDocument = Unsafe_Coerce.unsafeCoerce;\nvar readyState = /* #__PURE__ */ (function () {\n    var $0 = Data_Functor.map(Effect.functorEffect)((function () {\n        var $2 = Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value);\n        return function ($3) {\n            return $2(Web_HTML_HTMLDocument_ReadyState.parse($3));\n        };\n    })());\n    return function ($1) {\n        return $0($foreign[\"_readyState\"]($1));\n    };\n})();\nvar head = /* #__PURE__ */ (function () {\n    var $4 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($5) {\n        return $4($foreign[\"_head\"]($5));\n    };\n})();\nvar fromParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNonElementParentNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromNode = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromEventTarget = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar fromDocument = /* #__PURE__ */ Web_Internal_FFI.unsafeReadProtoTagged(\"HTMLDocument\");\nvar documentElement = /* #__PURE__ */ (function () {\n    var $6 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($7) {\n        return $6($foreign[\"_documentElement\"]($7));\n    };\n})();\nvar currentScript = /* #__PURE__ */ (function () {\n    var $8 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($9) {\n        return $8($foreign[\"_currentScript\"]($9));\n    };\n})();\nvar body = /* #__PURE__ */ (function () {\n    var $10 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($11) {\n        return $10($foreign[\"_body\"]($11));\n    };\n})();\nvar activeElement = /* #__PURE__ */ (function () {\n    var $12 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($13) {\n        return $12($foreign[\"_activeElement\"]($13));\n    };\n})();\nexport {\n    referrer,\n    title,\n    setTitle\n} from \"./foreign.js\";\nexport {\n    fromDocument,\n    fromNode,\n    fromParentNode,\n    fromNonElementParentNode,\n    fromEventTarget,\n    toDocument,\n    toNode,\n    toParentNode,\n    toNonElementParentNode,\n    toEventTarget,\n    documentElement,\n    head,\n    body,\n    readyState,\n    activeElement,\n    currentScript\n};\n", "// Generated by purs version 0.15.2\nimport * as $foreign from \"./foreign.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Nullable from \"../Data.Nullable/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Unsafe_Coerce from \"../Unsafe.Coerce/index.js\";\nvar toParentNode = Unsafe_Coerce.unsafeCoerce;\nvar toNonDocumentTypeChildNode = Unsafe_Coerce.unsafeCoerce;\nvar toNode = Unsafe_Coerce.unsafeCoerce;\nvar toEventTarget = Unsafe_Coerce.unsafeCoerce;\nvar toElement = Unsafe_Coerce.unsafeCoerce;\nvar toChildNode = Unsafe_Coerce.unsafeCoerce;\nvar offsetParent = /* #__PURE__ */ (function () {\n    var $0 = Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe);\n    return function ($1) {\n        return $0($foreign[\"_offsetParent\"]($1));\n    };\n})();\nvar fromParentNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNonDocumentTypeChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromEventTarget = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromElement = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nvar fromChildNode = function (x) {\n    return $foreign[\"_read\"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);\n};\nexport {\n    title,\n    setTitle,\n    lang,\n    setLang,\n    dir,\n    setDir,\n    hidden,\n    setHidden,\n    tabIndex,\n    setTabIndex,\n    draggable,\n    setDraggable,\n    contentEditable,\n    setContentEditable,\n    isContentEditable,\n    spellcheck,\n    setSpellcheck,\n    click,\n    focus,\n    blur,\n    offsetTop,\n    offsetLeft,\n    offsetWidth,\n    offsetHeight\n} from \"./foreign.js\";\nexport {\n    fromElement,\n    fromNode,\n    fromChildNode,\n    fromNonDocumentTypeChildNode,\n    fromParentNode,\n    fromEventTarget,\n    toElement,\n    toNode,\n    toChildNode,\n    toNonDocumentTypeChildNode,\n    toParentNode,\n    toEventTarget,\n    offsetParent\n};\n", "export function document(window) {\n  return function () {\n    return window.document;\n  };\n}\n\nexport function navigator(window) {\n  return function () {\n    return window.navigator;\n  };\n}\n\nexport function location(window) {\n  return function () {\n    return window.location;\n  };\n}\n\nexport function history(window) {\n  return function() {\n    return window.history;\n  };\n}\n\nexport function innerWidth(window) {\n  return function () {\n    return window.innerWidth;\n  };\n}\n\nexport function innerHeight(window) {\n  return function () {\n    return window.innerHeight;\n  };\n}\n\nexport function alert(str) {\n  return function (window) {\n    return function () {\n      window.alert(str);\n    };\n  };\n}\n\nexport function confirm(str) {\n  return function (window) {\n    return function () {\n      return window.confirm(str);\n    };\n  };\n}\n\nexport function moveBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.moveBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function moveTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.moveTo(width, height);\n      };\n    };\n  };\n}\n\nexport function _open(url) {\n  return function (name) {\n    return function (features) {\n      return function (window) {\n        return function () {\n          return window.open(url, name, features);\n        };\n      };\n    };\n  };\n}\n\nexport function outerHeight(window) {\n  return function () {\n    return window.outerHeight;\n  };\n}\n\nexport function outerWidth(window) {\n  return function () {\n    return window.outerWidth;\n  };\n}\n\nexport function print(window) {\n  return function () {\n    window.print();\n  };\n}\n\nexport function _prompt(str) {\n  return function (defaultText) {\n    return function (window) {\n      return function () {\n        return window.prompt(str, defaultText);\n      };\n    };\n  };\n}\n\nexport function resizeBy(xDelta) {\n  return function (yDelta) {\n    return function (window) {\n      return function () {\n        window.resizeBy(xDelta, yDelta);\n      };\n    };\n  };\n}\n\nexport function resizeTo(width) {\n  return function (height) {\n    return function (window) {\n      return function () {\n        window.resizeTo(width, height);\n      };\n    };\n  };\n}\n\nexport function screenX(window) {\n  return function () {\n    return window.screenX;\n  };\n}\n\nexport function screenY(window) {\n  return function () {\n    return window.screenY;\n  };\n}\n\nexport function scroll(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scroll(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollBy(xCoord) {\n  return function (yCoord) {\n    return function (window) {\n      return function () {\n        window.scrollBy(xCoord, yCoord);\n      };\n    };\n  };\n}\n\nexport function scrollX(window) {\n  return function () {\n    return window.scrollX;\n  };\n}\n\nexport function scrollY(window) {\n  return function () {\n    return window.scrollY;\n  };\n}\n\nexport function localStorage(window) {\n  return function () {\n    return window.localStorage;\n  };\n}\n\nexport function sessionStorage(window) {\n  return function () {\n    return window.sessionStorage;\n  };\n}\n\nexport function requestAnimationFrame(fn) {\n  return function(window) {\n    return function() {\n      return window.requestAnimationFrame(fn);\n    };\n  };\n}\n\nexport function cancelAnimationFrame(id) {\n  return function(window) {\n    return function() {\n      return window.cancelAnimationFrame(id);\n    };\n  };\n}\n\nexport function requestIdleCallback(opts) {\n  return function(fn) {\n    return function(window) {\n      return function() {\n        return window.requestIdleCallback(fn, opts);\n      };\n    };\n  };\n}\n\nexport function cancelIdleCallback(id) {\n  return function(window) {\n    return function() {\n      return window.cancelIdleCallback(id);\n    };\n  };\n}\n\nexport function parent(window) {\n  return function() {\n    return window.parent;\n  };\n}\n\nexport function _opener(window) {\n  return function() {\n    return window.opener;\n  };\n}\n", "// Generated by purs version 0.15.2\nimport * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Control_Monad_Reader_Class from \"../Control.Monad.Reader.Class/index.js\";\nimport * as Control_Safely from \"../Control.Safely/index.js\";\nimport * as Data_Foldable from \"../Data.Foldable/index.js\";\nimport * as Data_Functor from \"../Data.Functor/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Effect_Class from \"../Effect.Class/index.js\";\nimport * as Effect_Ref from \"../Effect.Ref/index.js\";\nimport * as Jelly_Data_Jelly from \"../Jelly.Data.Jelly/index.js\";\nimport * as Jelly_Data_Props from \"../Jelly.Data.Props/index.js\";\nimport * as Web_DOM_Document from \"../Web.DOM.Document/index.js\";\nimport * as Web_DOM_Element from \"../Web.DOM.Element/index.js\";\nimport * as Web_DOM_Node from \"../Web.DOM.Node/index.js\";\nimport * as Web_DOM_Text from \"../Web.DOM.Text/index.js\";\nimport * as Web_Event_EventTarget from \"../Web.Event.EventTarget/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar text = function (txtJelly) {\n    return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Data_Functor.map(Effect.functorEffect)(Web_DOM_Text.toNode)(Control_Bind.bindFlipped(Effect.bindEffect)((function () {\n        var $11 = Web_DOM_Document.createTextNode(\"\");\n        return function ($12) {\n            return $11(Web_HTML_HTMLDocument.toDocument($12));\n        };\n    })())(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window)))))(function (node) {\n        return Control_Bind.discard(Control_Bind.discardUnit)(Jelly_Data_Jelly.bindJelly)(Jelly_Data_Jelly.launchJelly_(Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(txtJelly)(function (txt) {\n            return Control_Bind.discard(Control_Bind.discardUnit)(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Web_DOM_Node.setTextContent(txt)(node)))(function () {\n                return Control_Applicative.pure(Jelly_Data_Jelly.applicativeJelly)(Data_Unit.unit);\n            });\n        })))(function () {\n            return Control_Applicative.pure(Jelly_Data_Jelly.applicativeJelly)(node);\n        });\n    });\n};\nvar setProp = function (element) {\n    return function (prop) {\n        return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Control_Monad_Reader_Class.ask(Jelly_Data_Jelly.monadAskJellyInternalJell))(function (v) {\n            if (prop instanceof Jelly_Data_Props.PropAttribute) {\n                return Jelly_Data_Jelly.launchJelly_(Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(prop.value1)(function (value) {\n                    return Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Web_DOM_Element.setAttribute(prop.value0)(value)(element));\n                }));\n            };\n            if (prop instanceof Jelly_Data_Props.PropListener) {\n                return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Web_Event_EventTarget.eventListener(function (e) {\n                    return Jelly_Data_Jelly.alone(v.context)(prop.value1(e));\n                })))(function (listener) {\n                    return Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Web_Event_EventTarget.addEventListener(prop.value0)(listener)(false)(Web_DOM_Element.toEventTarget(element)));\n                });\n            };\n            throw new Error(\"Failed pattern match at Jelly.HTML (line 29, column 3 - line 39, column 30): \" + [ prop.constructor.name ]);\n        });\n    };\n};\nvar ifEl = /* #__PURE__ */ Control_Bind.ifM(Jelly_Data_Jelly.bindJelly);\nvar emptyEl = /* #__PURE__ */ text(/* #__PURE__ */ Control_Applicative.pure(Jelly_Data_Jelly.applicativeJelly)(\"\"));\nvar whenEl = function (conditionJelly) {\n    return function (childJelly) {\n        return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(conditionJelly)(function (condition) {\n            if (condition) {\n                return childJelly;\n            };\n            return emptyEl;\n        });\n    };\n};\nvar addChild = function (parentNode) {\n    return function (nodeJelly) {\n        return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Effect_Ref[\"new\"](Data_Maybe.Nothing.value)))(function (oldNodeRef) {\n            return Jelly_Data_Jelly.launchJelly_(Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Effect_Ref.read(oldNodeRef)))(function (oldNodeMaybe) {\n                return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(nodeJelly)(function (newNode) {\n                    return Control_Bind.discard(Control_Bind.discardUnit)(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)((function () {\n                        if (oldNodeMaybe instanceof Data_Maybe.Nothing) {\n                            return Web_DOM_Node.appendChild(newNode)(parentNode);\n                        };\n                        if (oldNodeMaybe instanceof Data_Maybe.Just) {\n                            return function __do() {\n                                Web_DOM_Node.insertBefore(newNode)(oldNodeMaybe.value0)(parentNode)();\n                                return Web_DOM_Node.removeChild(oldNodeMaybe.value0)(parentNode)();\n                            };\n                        };\n                        throw new Error(\"Failed pattern match at Jelly.HTML (line 50, column 16 - line 55, column 39): \" + [ oldNodeMaybe.constructor.name ]);\n                    })()))(function () {\n                        return Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Effect_Ref.write(new Data_Maybe.Just(newNode))(oldNodeRef));\n                    });\n                });\n            }));\n        });\n    };\n};\nvar el = function (tagName) {\n    return function (props) {\n        return function (children) {\n            return Control_Bind.bind(Jelly_Data_Jelly.bindJelly)(Effect_Class.liftEffect(Jelly_Data_Jelly.monadEffectJelly)(Control_Bind.bindFlipped(Effect.bindEffect)((function () {\n                var $13 = Web_DOM_Document.createElement(tagName);\n                return function ($14) {\n                    return $13(Web_HTML_HTMLDocument.toDocument($14));\n                };\n            })())(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (element) {\n                return Control_Bind.discard(Control_Bind.discardUnit)(Jelly_Data_Jelly.bindJelly)(Control_Safely.for_(Data_Foldable.foldableArray)(Jelly_Data_Jelly.monadRecJelly)(props)(setProp(element)))(function () {\n                    return Control_Bind.discard(Control_Bind.discardUnit)(Jelly_Data_Jelly.bindJelly)(Control_Safely.for_(Data_Foldable.foldableArray)(Jelly_Data_Jelly.monadRecJelly)(children)(addChild(Web_DOM_Element.toNode(element))))(function () {\n                        return Control_Applicative.pure(Jelly_Data_Jelly.applicativeJelly)(Web_DOM_Element.toNode(element));\n                    });\n                });\n            });\n        };\n    };\n};\nvar el_ = function (tagName) {\n    return function (children) {\n        return el(tagName)([  ])(children);\n    };\n};\nexport {\n    setProp,\n    addChild,\n    el,\n    el_,\n    emptyEl,\n    whenEl,\n    ifEl,\n    text\n};\n", "// Generated by purs version 0.15.2\nimport * as Control_Bind from \"../Control.Bind/index.js\";\nimport * as Data_Maybe from \"../Data.Maybe/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Effect from \"../Effect/index.js\";\nimport * as Jelly_Data_Jelly from \"../Jelly.Data.Jelly/index.js\";\nimport * as Web_DOM_Node from \"../Web.DOM.Node/index.js\";\nimport * as Web_HTML from \"../Web.HTML/index.js\";\nimport * as Web_HTML_HTMLDocument from \"../Web.HTML.HTMLDocument/index.js\";\nimport * as Web_HTML_HTMLElement from \"../Web.HTML.HTMLElement/index.js\";\nimport * as Web_HTML_Window from \"../Web.HTML.Window/index.js\";\nvar runComponent = function (r) {\n    return function (jellyNode) {\n        return function __do() {\n            var bodyMaybe = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.body)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();\n            var node = Jelly_Data_Jelly.alone(r)(jellyNode)();\n            if (bodyMaybe instanceof Data_Maybe.Just) {\n                return Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(bodyMaybe.value0))();\n            };\n            if (bodyMaybe instanceof Data_Maybe.Nothing) {\n                return Data_Unit.unit;\n            };\n            throw new Error(\"Failed pattern match at Jelly.RunComponent (line 22, column 3 - line 24, column 25): \" + [ bodyMaybe.constructor.name ]);\n        };\n    };\n};\nexport {\n    runComponent\n};\n", "import * as Control_Applicative from \"../Control.Applicative/index.js\";\nimport * as Data_Unit from \"../Data.Unit/index.js\";\nimport * as Jelly_Data_Jelly from \"../Jelly.Data.Jelly/index.js\";\nimport * as Jelly_HTML from \"../Jelly.HTML/index.js\";\nimport * as Jelly_RunComponent from \"../Jelly.RunComponent/index.js\";\nvar main = /* #__PURE__ */ Jelly_RunComponent.runComponent(Data_Unit.unit)(/* #__PURE__ */ Jelly_HTML.text(/* #__PURE__ */ Control_Applicative.pure(Jelly_Data_Jelly.applicativeJelly)(\"Hello, Jelly\")));\nexport {\n    main\n};\n", "import { main } from \"../output/Main/index.js\";\n\nmain();\n"],
  "mappings": "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",
  "names": []
}
